{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_entryFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "name": "LotteryFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "name": "LotteryStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entryId",
          "type": "uint256"
        }
      ],
      "name": "NewEntry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UserPaid",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newDuration",
          "type": "uint256"
        }
      ],
      "name": "changeDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newEntryFee",
          "type": "uint256"
        }
      ],
      "name": "changeEntryFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numberOfEntries",
          "type": "uint256"
        }
      ],
      "name": "enterLottery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "entryIdToParticipant",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyhash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryDeadlineTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lotteryState",
      "outputs": [
        {
          "internalType": "enum Lottery.LOTTERY_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "participantEntries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Usu\u00e1rio/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Usu\u00e1rio/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "2": "C:/Users/Usu\u00e1rio/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
    "3": "C:/Users/Usu\u00e1rio/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol",
    "4": "C:/Users/Usu\u00e1rio/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "6": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        916
      ],
      "Context": [
        1034
      ],
      "LinkTokenInterface": [
        1011
      ],
      "Lottery": [
        520
      ],
      "Ownable": [
        749
      ],
      "VRFConsumerBase": [
        870
      ],
      "VRFRequestIDBase": [
        1084
      ]
    },
    "id": 521,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "C:/Users/Usu\u00e1rio/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 521,
        "sourceUnit": 917,
        "src": "57:76:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Usu\u00e1rio/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 521,
        "sourceUnit": 871,
        "src": "134:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Usu\u00e1rio/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 521,
        "sourceUnit": 750,
        "src": "194:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 870,
              "src": "268:15:6"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "268:15:6"
          },
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 749,
              "src": "285:7:6"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "285:7:6"
          }
        ],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 520,
        "linearizedBaseContracts": [
          520,
          749,
          1034,
          870,
          1084
        ],
        "name": "Lottery",
        "nameLocation": "257:7:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Lottery.LOTTERY_STATE",
            "id": 12,
            "members": [
              {
                "id": 9,
                "name": "CLOSED",
                "nameLocation": "350:6:6",
                "nodeType": "EnumValue",
                "src": "350:6:6"
              },
              {
                "id": 10,
                "name": "OPENED",
                "nameLocation": "366:6:6",
                "nodeType": "EnumValue",
                "src": "366:6:6"
              },
              {
                "id": 11,
                "name": "PROCESSING",
                "nameLocation": "382:10:6",
                "nodeType": "EnumValue",
                "src": "382:10:6"
              }
            ],
            "name": "LOTTERY_STATE",
            "nameLocation": "326:13:6",
            "nodeType": "EnumDefinition",
            "src": "321:77:6"
          },
          {
            "constant": false,
            "functionSelector": "6939864b",
            "id": 15,
            "mutability": "mutable",
            "name": "lotteryState",
            "nameLocation": "424:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "403:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
              "typeString": "enum Lottery.LOTTERY_STATE"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "LOTTERY_STATE",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12,
                "src": "403:13:6"
              },
              "referencedDeclaration": 12,
              "src": "403:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                "typeString": "enum Lottery.LOTTERY_STATE"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "36013189",
            "id": 17,
            "mutability": "mutable",
            "name": "randomness",
            "nameLocation": "457:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "442:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "62da8313",
            "id": 19,
            "mutability": "mutable",
            "name": "entryCounter",
            "nameLocation": "488:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "473:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "473:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "072ea61c",
            "id": 21,
            "mutability": "mutable",
            "name": "entryFee",
            "nameLocation": "521:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "506:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "506:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 23,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "550:3:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "535:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "535:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d97902f",
            "id": 25,
            "mutability": "mutable",
            "name": "lotteryDuration",
            "nameLocation": "575:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "560:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "560:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d84c72c5",
            "id": 27,
            "mutability": "mutable",
            "name": "lotteryDeadlineTimestamp",
            "nameLocation": "611:24:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "596:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "596:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69ebe78e",
            "id": 29,
            "mutability": "mutable",
            "name": "keyhash",
            "nameLocation": "660:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "645:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 28,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "645:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06ef53e0",
            "id": 31,
            "mutability": "mutable",
            "name": "latestWinner",
            "nameLocation": "688:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "673:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "673:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fcac59c3",
            "id": 35,
            "mutability": "mutable",
            "name": "participantEntries",
            "nameLocation": "741:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "706:53:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "714:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "706:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 33,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "725:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe0837d1",
            "id": 39,
            "mutability": "mutable",
            "name": "entryIdToParticipant",
            "nameLocation": "798:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "765:53:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 36,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "765:25:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "782:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 42,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "853:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 520,
            "src": "824:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$916",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 41,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 916,
                "src": "824:21:6"
              },
              "referencedDeclaration": 916,
              "src": "824:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$916",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 46,
            "name": "LotteryStarted",
            "nameLocation": "889:14:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "912:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "904:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:19:6"
            },
            "src": "883:40:6"
          },
          {
            "anonymous": false,
            "id": 52,
            "name": "LotteryFinished",
            "nameLocation": "934:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "958:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "950:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timeStamp",
                  "nameLocation": "974:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "966:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "949:35:6"
            },
            "src": "928:57:6"
          },
          {
            "anonymous": false,
            "id": 58,
            "name": "NewEntry",
            "nameLocation": "996:8:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "1013:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1005:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "entryId",
                  "nameLocation": "1034:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1026:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:38:6"
            },
            "src": "990:53:6"
          },
          {
            "anonymous": false,
            "id": 64,
            "name": "UserPaid",
            "nameLocation": "1054:8:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1071:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1063:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1085:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1077:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1062:30:6"
            },
            "src": "1048:45:6"
          },
          {
            "anonymous": false,
            "id": 68,
            "name": "RequestedRandomness",
            "nameLocation": "1104:19:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1132:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "1124:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:19:6"
            },
            "src": "1098:45:6"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1397:310:6",
              "statements": [
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1407:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$916",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1441:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 88,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "1419:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$916_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1419:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$916",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1407:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$916",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:52:6"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 93,
                      "name": "entryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1534:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 94,
                      "name": "_entryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1545:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1534:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:20:6"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1564:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1570:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1564:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:10:6"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1584:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "1594:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1584:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:18:6"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1612:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 106,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1627:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$12_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1627:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "1612:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1612:35:6"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "lotteryDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1677:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3836343030",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1695:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "86400"
                    },
                    "src": "1677:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:23:6"
                }
              ]
            },
            "id": 115,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 83,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "1361:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 84,
                    "name": "_linkTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74,
                    "src": "1378:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 85,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 82,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 870,
                  "src": "1345:15:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1345:51:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nameLocation": "1178:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1170:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "1213:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1205:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_linkTokenAddress",
                  "nameLocation": "1246:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1238:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_entryFee",
                  "nameLocation": "1281:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1273:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1308:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1300:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1300:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "1330:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1322:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:184:6"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:6"
            },
            "scope": 520,
            "src": "1149:558:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1749:99:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 118,
                          "name": "lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1767:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 119,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1783:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$12_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPENED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1783:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "1767:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d757374206265206f70656e6564",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1805:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24b8184f1790fdadd9302d37963d25060e07dda244fc31557c3378e99b3a21c1",
                          "typeString": "literal_string \"Lottery must be opened\""
                        },
                        "value": "Lottery must be opened"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24b8184f1790fdadd9302d37963d25060e07dda244fc31557c3378e99b3a21c1",
                          "typeString": "literal_string \"Lottery must be opened\""
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1759:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:71:6"
                },
                {
                  "id": 125,
                  "nodeType": "PlaceholderStatement",
                  "src": "1840:1:6"
                }
              ]
            },
            "id": 127,
            "name": "onlyOpened",
            "nameLocation": "1738:10:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1749:0:6"
            },
            "src": "1729:119:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "1874:99:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 130,
                          "name": "lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1892:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 131,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1908:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$12_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "1908:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "1892:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d75737420626520636c6f736564",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1930:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_175e27549d0e435a170c022347bd2b2d891b3c4931ba764348aaa6b26ca2005e",
                          "typeString": "literal_string \"Lottery must be closed\""
                        },
                        "value": "Lottery must be closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_175e27549d0e435a170c022347bd2b2d891b3c4931ba764348aaa6b26ca2005e",
                          "typeString": "literal_string \"Lottery must be closed\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1884:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1884:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1884:71:6"
                },
                {
                  "id": 137,
                  "nodeType": "PlaceholderStatement",
                  "src": "1965:1:6"
                }
              ]
            },
            "id": 139,
            "name": "onlyClosed",
            "nameLocation": "1863:10:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1874:0:6"
            },
            "src": "1854:119:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2013:82:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 144,
                          "name": "_number",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2031:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2042:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2031:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320706172616d657465722063616e6e6f74206265207a65726f",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2045:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c16a8c29b2aa42d4b592011b699468b67b48c9796af36a542b3e3dd17fb8f37",
                          "typeString": "literal_string \"This parameter cannot be zero\""
                        },
                        "value": "This parameter cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c16a8c29b2aa42d4b592011b699468b67b48c9796af36a542b3e3dd17fb8f37",
                          "typeString": "literal_string \"This parameter cannot be zero\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2023:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2023:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2023:54:6"
                },
                {
                  "id": 150,
                  "nodeType": "PlaceholderStatement",
                  "src": "2087:1:6"
                }
              ]
            },
            "id": 152,
            "name": "notZero",
            "nameLocation": "1988:7:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_number",
                  "nameLocation": "2004:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1996:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1995:17:6"
            },
            "src": "1979:116:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "2154:207:6",
              "statements": [
                {
                  "assignments": [
                    null,
                    158,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2174:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2167:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2167:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 162,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 159,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2189:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$916",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "2189:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2164:52:6"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "ethPrice",
                      "nameLocation": "2234:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2226:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2226:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 167,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "2253:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2245:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2245:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2245:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2262:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2266:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "2262:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "2245:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2226:42:6"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "2286:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2278:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2278:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2298:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2302:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2298:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2278:26:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 180,
                            "name": "entryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2322:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 181,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "2333:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2322:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 183,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2321:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 184,
                      "name": "ethPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "2346:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2321:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "2314:40:6"
                }
              ]
            },
            "functionSelector": "e586a4f0",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntryFee",
            "nameLocation": "2110:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2121:2:6"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2145:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2144:9:6"
            },
            "scope": 520,
            "src": "2101:260:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "2507:881:6",
              "statements": [
                {
                  "assignments": [
                    199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 199,
                      "mutability": "mutable",
                      "name": "_fee",
                      "nameLocation": "2525:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "2517:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 198,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2517:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 200,
                      "name": "getEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "2532:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:13:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2517:28:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2563:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2563:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2585:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2577:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 206,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2577:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2577:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2563:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420757365722061646472657373",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2589:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        },
                        "value": "invalid user address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2555:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2555:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:57:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 215,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2630:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2630:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 217,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "2643:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 218,
                            "name": "_numberOfEntries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "2650:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2643:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2630:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f207370656e64206d6f72652045544821",
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2668:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f4d6283454b528bce61a908a772808c61dd40185e3ba77c713fa86ebb8d7362",
                          "typeString": "literal_string \"You need to spend more ETH!\""
                        },
                        "value": "You need to spend more ETH!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f4d6283454b528bce61a908a772808c61dd40185e3ba77c713fa86ebb8d7362",
                          "typeString": "literal_string \"You need to spend more ETH!\""
                        }
                      ],
                      "id": 214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2622:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:76:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:76:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 225,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2729:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2729:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 227,
                          "name": "lotteryDeadlineTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2747:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2729:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206c6f747465727920646561646c696e652069732066696e6973686564",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2786:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3501672eb40362a13f1784daa15d50f1f1a7f7e6f07e802a3bdd9a7672f6b5d",
                          "typeString": "literal_string \"The lottery deadline is finished\""
                        },
                        "value": "The lottery deadline is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3501672eb40362a13f1784daa15d50f1f1a7f7e6f07e802a3bdd9a7672f6b5d",
                          "typeString": "literal_string \"The lottery deadline is finished\""
                        }
                      ],
                      "id": 224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2708:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2708:122:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "2708:122:6"
                },
                {
                  "assignments": [
                    233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 233,
                      "mutability": "mutable",
                      "name": "amountToBeRefund",
                      "nameLocation": "2938:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "2930:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2930:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 234,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2957:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2957:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 236,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "2970:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 237,
                            "name": "_numberOfEntries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "2977:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2970:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 239,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2969:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2957:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2930:64:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 242,
                      "name": "amountToBeRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "3008:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3027:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3008:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 252,
                  "nodeType": "IfStatement",
                  "src": "3004:88:6",
                  "trueBody": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "3030:62:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 246,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3052:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3052:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 248,
                              "name": "amountToBeRefund",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "3064:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 245,
                            "name": "payUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "3044:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3044:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "3044:37:6"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "3175:207:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 263,
                              "name": "entryIdToParticipant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "3189:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 265,
                            "indexExpression": {
                              "id": 264,
                              "name": "entryCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "3210:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3189:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 266,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3226:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3226:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3189:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 269,
                        "nodeType": "ExpressionStatement",
                        "src": "3189:47:6"
                      },
                      {
                        "expression": {
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3250:32:6",
                          "subExpression": {
                            "baseExpression": {
                              "id": 270,
                              "name": "participantEntries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "3250:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 273,
                            "indexExpression": {
                              "expression": {
                                "id": 271,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3269:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3269:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3250:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 275,
                        "nodeType": "ExpressionStatement",
                        "src": "3250:32:6"
                      },
                      {
                        "expression": {
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3296:14:6",
                          "subExpression": {
                            "id": 276,
                            "name": "entryCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "3296:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 278,
                        "nodeType": "ExpressionStatement",
                        "src": "3296:14:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 280,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3338:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3338:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 282,
                                "name": "entryCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "3350:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3365:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3350:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 279,
                            "name": "NewEntry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3329:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "EmitStatement",
                        "src": "3324:43:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 257,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "3136:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 258,
                      "name": "_numberOfEntries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "3146:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3136:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 288,
                  "initializationExpression": {
                    "assignments": [
                      254
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "counter",
                        "nameLocation": "3123:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "3115:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3115:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 256,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3133:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3115:19:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3164:9:6",
                      "subExpression": {
                        "id": 260,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3164:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 262,
                    "nodeType": "ExpressionStatement",
                    "src": "3164:9:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "3110:272:6"
                }
              ]
            },
            "functionSelector": "3fd43098",
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 192,
                  "name": "onlyOpened",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 127,
                  "src": "2457:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2457:10:6"
              },
              {
                "arguments": [
                  {
                    "id": 195,
                    "name": "_numberOfEntries",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 190,
                    "src": "2485:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 194,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "2477:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2477:25:6"
              }
            ],
            "name": "enterLottery",
            "nameLocation": "2376:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_numberOfEntries",
                  "nameLocation": "2397:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "2389:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2388:26:6"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2507:0:6"
            },
            "scope": 520,
            "src": "2367:1021:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "3469:150:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 301,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "3487:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3504:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3496:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 302,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3496:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3496:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3487:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420757365722061646472657373",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3508:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        },
                        "value": "invalid user address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78359dd56f2c41c23946f5c79919dd06f79520be28e60a3758f48fb62585fbf5",
                          "typeString": "literal_string \"invalid user address\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3479:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3479:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "3479:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 315,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3565:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 312,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "3549:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3541:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3541:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3541:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3541:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "3541:32:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 319,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "3597:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 320,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3604:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 318,
                      "name": "UserPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3588:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3588:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "EmitStatement",
                  "src": "3583:29:6"
                }
              ]
            },
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 297,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "3460:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 298,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "3452:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3452:16:6"
              }
            ],
            "name": "payUser",
            "nameLocation": "3403:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 292,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3419:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3411:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3411:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3434:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "3426:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3410:32:6"
            },
            "returnParameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3469:0:6"
            },
            "scope": 520,
            "src": "3394:225:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "3667:168:6",
              "statements": [
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 329,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3677:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3692:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$12_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPENED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3692:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "3677:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:35:6"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 334,
                      "name": "lotteryDeadlineTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3722:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 335,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3749:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3749:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 337,
                        "name": "lotteryDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3767:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3749:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3722:60:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3722:60:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3812:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3812:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 341,
                      "name": "LotteryStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "3797:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "EmitStatement",
                  "src": "3792:36:6"
                }
              ]
            },
            "functionSelector": "160344e2",
            "id": 347,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 327,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 326,
                  "name": "onlyClosed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 139,
                  "src": "3656:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3656:10:6"
              }
            ],
            "name": "startLottery",
            "nameLocation": "3634:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3646:2:6"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3667:0:6"
            },
            "scope": 520,
            "src": "3625:210:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "3881:293:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 353,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3912:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3912:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 355,
                          "name": "lotteryDeadlineTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "3931:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3912:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206c6f7474657279206973206e6f742066696e697368656420796574",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3969:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6605f885a4e16d3a30670960fdf2d7ade95b4256c5d90913c8496c1e0e737f79",
                          "typeString": "literal_string \"The lottery is not finished yet\""
                        },
                        "value": "The lottery is not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6605f885a4e16d3a30670960fdf2d7ade95b4256c5d90913c8496c1e0e737f79",
                          "typeString": "literal_string \"The lottery is not finished yet\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3891:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3891:121:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "3891:121:6"
                },
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 360,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "4022:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 361,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4037:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$12_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PROCESSING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "4037:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "4022:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:39:6"
                },
                {
                  "assignments": [
                    366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 366,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "4079:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 376,
                      "src": "4071:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 365,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4071:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "keyhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "4109:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 369,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "4118:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 367,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "4091:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4071:51:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 373,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "4157:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 372,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "4137:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4137:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "EmitStatement",
                  "src": "4132:35:6"
                }
              ]
            },
            "functionSelector": "1593a8c7",
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 349,
                  "name": "onlyOpened",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 127,
                  "src": "3870:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3870:10:6"
              }
            ],
            "name": "endLottery",
            "nameLocation": "3850:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3860:2:6"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3881:0:6"
            },
            "scope": 520,
            "src": "3841:333:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              764
            ],
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "4315:978:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 389,
                          "name": "lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "4346:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 390,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "4362:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$12_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PROCESSING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "4362:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "4346:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520636f6e7472616374206973206e6f742070726f63657373696e67207468652077696e6e657220796574",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4400:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3380ff1cf7bbb5233943bdda5dddcad4801271a6dac08f2f1408983f671fad6a",
                          "typeString": "literal_string \"The contract is not processing the winner yet\""
                        },
                        "value": "The contract is not processing the winner yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3380ff1cf7bbb5233943bdda5dddcad4801271a6dac08f2f1408983f671fad6a",
                          "typeString": "literal_string \"The contract is not processing the winner yet\""
                        }
                      ],
                      "id": 388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4325:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4325:132:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:132:6"
                },
                {
                  "assignments": [
                    397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 397,
                      "mutability": "mutable",
                      "name": "entryIdOfWinner",
                      "nameLocation": "4475:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4467:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4467:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 401,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 398,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "4493:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "id": 399,
                      "name": "entryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4507:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4493:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4467:52:6"
                },
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 402,
                      "name": "latestWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "4529:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 403,
                        "name": "entryIdToParticipant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "4544:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 405,
                      "indexExpression": {
                        "id": 404,
                        "name": "entryIdOfWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "4565:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4544:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4529:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:52:6"
                },
                {
                  "assignments": [
                    409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "contractBalance",
                      "nameLocation": "4701:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4693:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4693:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 412,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4727:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lottery_$520",
                            "typeString": "contract Lottery"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Lottery_$520",
                            "typeString": "contract Lottery"
                          }
                        ],
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4719:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4719:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4719:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4719:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4693:47:6"
                },
                {
                  "assignments": [
                    417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 417,
                      "mutability": "mutable",
                      "name": "amountToPayWinner",
                      "nameLocation": "4758:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4750:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4750:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 424,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 418,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "4779:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3930",
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4797:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_90_by_1",
                              "typeString": "int_const 90"
                            },
                            "value": "90"
                          },
                          "src": "4779:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 421,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4778:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4803:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "4778:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4750:56:6"
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "amountToPayOwner",
                      "nameLocation": "4824:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "4816:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 425,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4816:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 427,
                            "name": "contractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 409,
                            "src": "4844:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4862:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4844:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 430,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4843:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4868:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "4843:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4816:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 435,
                        "name": "latestWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "4889:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 436,
                        "name": "amountToPayWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4903:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 434,
                      "name": "payUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "4881:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4881:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "4881:40:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 440,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 684,
                          "src": "4939:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4939:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 442,
                        "name": "amountToPayOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "4948:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 439,
                      "name": "payUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "4931:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4931:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "4931:34:6"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 445,
                      "name": "lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "4993:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 446,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "5008:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$12_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "5008:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "4993:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$12",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:35:6"
                },
                {
                  "body": {
                    "id": 468,
                    "nodeType": "Block",
                    "src": "5090:76:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 460,
                              "name": "participantEntries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "5104:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 464,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 461,
                                "name": "entryIdToParticipant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "5123:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 463,
                              "indexExpression": {
                                "id": 462,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 451,
                                "src": "5144:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5123:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5104:47:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5154:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5104:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "5104:51:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 454,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "5059:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 455,
                      "name": "entryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "5067:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5059:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 469,
                  "initializationExpression": {
                    "assignments": [
                      451
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "5048:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 469,
                        "src": "5043:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5043:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 453,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5056:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5043:14:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5081:7:6",
                      "subExpression": {
                        "id": 457,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "5081:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 459,
                    "nodeType": "ExpressionStatement",
                    "src": "5081:7:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5038:128:6"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 470,
                      "name": "entryCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "5175:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5190:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5175:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "5175:16:6"
                },
                {
                  "expression": {
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 474,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "5201:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 475,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "5214:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5201:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "5201:24:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 479,
                        "name": "latestWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "5256:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 480,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5270:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5270:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 478,
                      "name": "LotteryFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5240:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5240:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 483,
                  "nodeType": "EmitStatement",
                  "src": "5235:51:6"
                }
              ]
            },
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 385,
                    "name": "_randomness",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 381,
                    "src": "4298:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 386,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 384,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "4290:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "4290:20:6"
              }
            ],
            "name": "fulfillRandomness",
            "nameLocation": "4189:17:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 383,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4273:8:6"
            },
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "4215:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "4207:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4207:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "4235:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "4227:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4227:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4206:41:6"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4315:0:6"
            },
            "scope": 520,
            "src": "4180:1113:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "5431:40:6",
              "statements": [
                {
                  "expression": {
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 497,
                      "name": "entryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5441:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 498,
                      "name": "_newEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 487,
                      "src": "5452:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5441:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "5441:23:6"
                }
              ]
            },
            "functionSelector": "f7d978a2",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "5368:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5368:9:6"
              },
              {
                "id": 492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 491,
                  "name": "onlyClosed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 139,
                  "src": "5386:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5386:10:6"
              },
              {
                "arguments": [
                  {
                    "id": 494,
                    "name": "_newEntryFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 487,
                    "src": "5413:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "5405:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5405:21:6"
              }
            ],
            "name": "changeEntryFee",
            "nameLocation": "5308:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "_newEntryFee",
                  "nameLocation": "5331:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "5323:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5323:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5322:22:6"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5431:0:6"
            },
            "scope": 520,
            "src": "5299:172:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "5611:47:6",
              "statements": [
                {
                  "expression": {
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 514,
                      "name": "lotteryDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "5621:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 515,
                      "name": "_newDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "5639:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5621:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "5621:30:6"
                }
              ]
            },
            "functionSelector": "b594f086",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 507,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 506,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 698,
                  "src": "5547:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5547:9:6"
              },
              {
                "id": 509,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 508,
                  "name": "onlyClosed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 139,
                  "src": "5566:10:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5566:10:6"
              },
              {
                "arguments": [
                  {
                    "id": 511,
                    "name": "_newDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 504,
                    "src": "5593:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 512,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 510,
                  "name": "notZero",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "5585:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "5585:21:6"
              }
            ],
            "name": "changeDuration",
            "nameLocation": "5486:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "_newDuration",
                  "nameLocation": "5509:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5501:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5501:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5500:22:6"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5611:0:6"
            },
            "scope": 520,
            "src": "5477:181:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 521,
        "src": "248:5412:6",
        "usedErrors": []
      }
    ],
    "src": "32:5629:6"
  },
  "bytecode": "",
  "bytecodeSha1": "cc2559d4a1b37533648c441d69f28fcb6b088eed",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "53": [
            2082,
            2104,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "54": [
            9749,
            9777,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {
        "Context._msgSender": {
          "50": [
            1892,
            1928,
            true
          ]
        },
        "Lottery.endLottery": {
          "45": [
            3912,
            3955,
            true
          ]
        },
        "Lottery.enterLottery": {
          "46": [
            1767,
            1803,
            true
          ],
          "47": [
            2630,
            2666,
            true
          ],
          "48": [
            2729,
            2771,
            true
          ],
          "49": [
            3008,
            3028,
            false
          ]
        },
        "Lottery.fulfillRandomness": {
          "52": [
            4346,
            4386,
            true
          ]
        },
        "Lottery.payUser": {
          "51": [
            3487,
            3506,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "0": [
            1133,
            1146
          ]
        },
        "Ownable.renounceOwnership": {
          "17": [
            1764,
            1809
          ],
          "18": [
            1819,
            1838
          ]
        },
        "Ownable.transferOwnership": {
          "23": [
            2074,
            2147
          ],
          "24": [
            2157,
            2200
          ],
          "25": [
            2210,
            2227
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "16": [
            658,
            675
          ]
        }
      },
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "19": [
            9741,
            9813
          ],
          "20": [
            9819,
            9859
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "27": [
            7888,
            7975
          ],
          "29": [
            8718,
            8757
          ],
          "31": [
            8763,
            8802
          ]
        }
      },
      "3": {
        "VRFRequestIDBase.makeRequestId": {
          "30": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "28": [
            980,
            1058
          ]
        }
      },
      "4": {},
      "6": {
        "Lottery.changeDuration": {
          "21": [
            5621,
            5651
          ]
        },
        "Lottery.changeEntryFee": {
          "26": [
            5441,
            5464
          ]
        },
        "Lottery.endLottery": {
          "1": [
            3891,
            4012
          ],
          "2": [
            4022,
            4061
          ],
          "3": [
            4132,
            4167
          ]
        },
        "Lottery.enterLottery": {
          "7": [
            2555,
            2612
          ],
          "8": [
            2622,
            2698
          ],
          "9": [
            2708,
            2830
          ],
          "10": [
            3044,
            3081
          ],
          "11": [
            3189,
            3236
          ],
          "12": [
            3250,
            3282
          ],
          "13": [
            3296,
            3310
          ],
          "14": [
            3324,
            3367
          ],
          "15": [
            3164,
            3173
          ]
        },
        "Lottery.fulfillRandomness": {
          "35": [
            4325,
            4457
          ],
          "36": [
            4529,
            4581
          ],
          "37": [
            4881,
            4921
          ],
          "38": [
            4931,
            4965
          ],
          "39": [
            4993,
            5028
          ],
          "40": [
            5104,
            5155
          ],
          "41": [
            5081,
            5088
          ],
          "42": [
            5175,
            5191
          ],
          "43": [
            5201,
            5225
          ],
          "44": [
            5235,
            5286
          ]
        },
        "Lottery.getEntryFee": {
          "22": [
            2314,
            2354
          ]
        },
        "Lottery.payUser": {
          "32": [
            3479,
            3531
          ],
          "33": [
            3541,
            3573
          ],
          "34": [
            3583,
            3612
          ]
        },
        "Lottery.startLottery": {
          "4": [
            3677,
            3712
          ],
          "5": [
            3722,
            3782
          ],
          "6": [
            3792,
            3828
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "248:5412:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:27;;;;;;;;;;-1:-1:-1;673:27:6;;;;-1:-1:-1;;;;;673:27:6;;;;;;-1:-1:-1;;;;;178:32:8;;;160:51;;148:2;133:18;673:27:6;;;;;;;;506:23;;;;;;;;;;;;;;;;;;;368:25:8;;;356:2;341:18;506:23:6;222:177:8;3841:333:6;;;;;;;;;;;;;:::i;:::-;;3625:210;;;;;;;;;;;;;:::i;560:30::-;;;;;;;;;;;;;;;;442:25;;;;;;;;;;;;;;;;2367:1021;;;;;;:::i;:::-;;:::i;473:27::-;;;;;;;;;;;;;;;;403:33;;;;;;;;;;-1:-1:-1;403:33:6;;;;-1:-1:-1;;;403:33:6;;;;;;;;;;;;;:::i;645:22::-;;;;;;;;;;;;;;;;1700:145:0;;;;;;;;;;;;;:::i;824:38:6:-;;;;;;;;;;-1:-1:-1;824:38:6;;;;-1:-1:-1;;;;;824:38:6;;;1068:85:0;;;;;;;;;;-1:-1:-1;1140:6:0;;-1:-1:-1;;;;;1140:6:0;1068:85;;9639:225:2;;;;;;;;;;-1:-1:-1;9639:225:2;;;;;:::i;:::-;;:::i;5477:181:6:-;;;;;;;;;;-1:-1:-1;5477:181:6;;;;;:::i;:::-;;:::i;596:39::-;;;;;;;;;;;;;;;;535:18;;;;;;;;;;;;;;;;2101:260;;;;;;;;;;;;;:::i;1994:240:0:-;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;5299:172:6:-;;;;;;;;;;-1:-1:-1;5299:172:6;;;;;:::i;:::-;;:::i;706:53::-;;;;;;;;;;-1:-1:-1;706:53:6;;;;;:::i;:::-;;;;;;;;;;;;;;765;;;;;;;;;;-1:-1:-1;765:53:6;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;765:53:6;;;3841:333;1783:20;1767:12;;-1:-1:-1;;;1767:12:6;;;;:36;;;;;;;;:::i;:::-;;1759:71;;;;-1:-1:-1;;;1759:71:6;;2235:2:8;1759:71:6;;;2217:21:8;2274:2;2254:18;;;2247:30;-1:-1:-1;;;2293:18:8;;;2286:52;2355:18;;1759:71:6;;;;;;;;;3931:24:::1;;3912:15;:43;;3891:121;;;::::0;-1:-1:-1;;;3891:121:6;;2586:2:8;3891:121:6::1;::::0;::::1;2568:21:8::0;2625:2;2605:18;;;2598:30;2664:33;2644:18;;;2637:61;2715:18;;3891:121:6::1;2384:355:8::0;3891:121:6::1;4022:12;:39:::0;;-1:-1:-1;;;;4022:39:6::1;-1:-1:-1::0;;;4022:39:6::1;::::0;;4109:7:::1;::::0;4118:3:::1;::::0;-1:-1:-1;;4091:31:6::1;::::0;:17:::1;:31::i;:::-;4071:51;;4137:30;4157:9;4137:30;;;;368:25:8::0;;356:2;341:18;;222:177;4137:30:6::1;;;;;;;;3881:293;3841:333::o:0;3625:210::-;1908:20;1892:12;;-1:-1:-1;;;1892:12:6;;;;:36;;;;;;;;:::i;:::-;;1884:71;;;;-1:-1:-1;;;1884:71:6;;;;;;;:::i;:::-;3692:20:::1;3677:35:::0;;-1:-1:-1;;;;3677:35:6::1;-1:-1:-1::0;;;3677:35:6::1;::::0;;3767:15:::1;::::0;3749:33:::1;::::0;:15:::1;:33;:::i;:::-;3722:24;:60:::0;3797:31:::1;::::0;3812:15:::1;368:25:8::0;;3797:31:6::1;::::0;356:2:8;341:18;3797:31:6::1;;;;;;;3625:210::o:0;2367:1021::-;1783:20;1767:12;;-1:-1:-1;;;1767:12:6;;;;:36;;;;;;;;:::i;:::-;;1759:71;;;;-1:-1:-1;;;1759:71:6;;2235:2:8;1759:71:6;;;2217:21:8;2274:2;2254:18;;;2247:30;-1:-1:-1;;;2293:18:8;;;2286:52;2355:18;;1759:71:6;2033:346:8;1759:71:6;2485:16;2031:12;2023:54:::1;;;;-1:-1:-1::0;;;2023:54:6::1;;;;;;;:::i;:::-;2517:12:::2;2532:13;:11;:13::i;:::-;2517:28:::0;-1:-1:-1;2563:10:6::2;2555:57;;;::::0;-1:-1:-1;;;2555:57:6;;3920:2:8;2555:57:6::2;::::0;::::2;3902:21:8::0;3959:2;3939:18;;;3932:30;-1:-1:-1;;;3978:18:8;;;3971:50;4038:18;;2555:57:6::2;3718:344:8::0;2555:57:6::2;2643:23;2650:16:::0;2643:4;:23:::2;:::i;:::-;2630:9;:36;;2622:76;;;::::0;-1:-1:-1;;;2622:76:6;;4442:2:8;2622:76:6::2;::::0;::::2;4424:21:8::0;4481:2;4461:18;;;4454:30;4520:29;4500:18;;;4493:57;4567:18;;2622:76:6::2;4240:351:8::0;2622:76:6::2;2747:24;;2729:15;:42;2708:122;;;::::0;-1:-1:-1;;;2708:122:6;;4798:2:8;2708:122:6::2;::::0;::::2;4780:21:8::0;;;4817:18;;;4810:30;4876:34;4856:18;;;4849:62;4928:18;;2708:122:6::2;4596:356:8::0;2708:122:6::2;2930:24;2970:23;2977:16:::0;2970:4;:23:::2;:::i;:::-;2957:37;::::0;:9:::2;:37;:::i;:::-;2930:64:::0;-1:-1:-1;3008:20:6;;3004:88:::2;;3044:37;3052:10;3064:16;3044:7;:37::i;:::-;3115:15;3110:272;3146:16;3136:7;:26;3110:272;;;3210:12;::::0;3189:34:::2;::::0;;;:20:::2;:34;::::0;;;;;;;:47;;-1:-1:-1;;;;;;3189:47:6::2;3226:10;3189:47:::0;;::::2;::::0;;;3250:30;;:18:::2;:30:::0;;;;;:32;;;::::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;3296:12:6::2;:14:::0;;;:12:::2;:14;::::0;::::2;:::i;:::-;;;;;;3329:38;3338:10;3365:1;3350:12;;:16;;;;:::i;:::-;3329:38;::::0;;-1:-1:-1;;;;;5419:32:8;;;5401:51;;5483:2;5468:18;;5461:34;;;;5374:18;3329:38:6::2;;;;;;;3164:9:::0;::::2;::::0;::::2;:::i;:::-;;;;3110:272;;;;2507:881;;1840:1:::1;2367:1021:::0;:::o;1700:145:0:-;1140:6;;-1:-1:-1;;;;;1140:6:0;665:10:1;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1790:6:::1;::::0;1769:40:::1;::::0;1806:1:::1;::::0;-1:-1:-1;;;;;1790:6:0::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1819:6;:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;9639:225:2:-;9749:10;-1:-1:-1;;;;;9763:14:2;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:2;;6069:2:8;9741:72:2;;;6051:21:8;6108:2;6088:18;;;6081:30;6147:33;6127:18;;;6120:61;6198:18;;9741:72:2;5867:355:8;9741:72:2;9819:40;9837:9;9848:10;9819:17;:40::i;:::-;9639:225;;:::o;5477:181:6:-;1140:6:0;;-1:-1:-1;;;;;1140:6:0;665:10:1;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1908:20:6::1;1892:12;::::0;-1:-1:-1;;;1892:12:6;::::1;;;:36;::::0;::::1;;;;;;:::i;:::-;;1884:71;;;;-1:-1:-1::0;;;1884:71:6::1;;;;;;;:::i;:::-;5593:12:::0;2031;2023:54:::2;;;;-1:-1:-1::0;;;2023:54:6::2;;;;;;;:::i;:::-;-1:-1:-1::0;5621:15:6::3;:30:::0;5477:181::o;2101:260::-;2145:7;2167:12;2189:9;;;;;;;;;-1:-1:-1;;;;;2189:9:6;-1:-1:-1;;;;;2189:25:6;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2164:52;;;;;;2226:16;2253:5;2262:6;2245:23;;;;:::i;:::-;2226:42;;2278:17;2298:6;2278:26;;2346:8;2333:9;2322:8;;:20;;;;:::i;:::-;2321:33;;;;:::i;:::-;2314:40;;;;;2101:260;:::o;1994:240:0:-;1140:6;;-1:-1:-1;;;;;1140:6:0;665:10:1;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;7348:2:8;2074:73:0::1;::::0;::::1;7330:21:8::0;7387:2;7367:18;;;7360:30;7426:34;7406:18;;;7399:62;-1:-1:-1;;;7477:18:8;;;7470:36;7523:19;;2074:73:0::1;7146:402:8::0;2074:73:0::1;2183:6;::::0;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6:::1;::::0;2162:38:::1;::::0;2183:6:::1;::::0;2162:38:::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;5299:172:6:-;1140:6:0;;-1:-1:-1;;;;;1140:6:0;665:10:1;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1908:20:6::1;1892:12;::::0;-1:-1:-1;;;1892:12:6;::::1;;;:36;::::0;::::1;;;;;;:::i;:::-;;1884:71;;;;-1:-1:-1::0;;;1884:71:6::1;;;;;;;:::i;:::-;5413:12:::0;2031;2023:54:::2;;;;-1:-1:-1::0;;;2023:54:6::2;;;;;;;:::i;:::-;-1:-1:-1::0;5441:8:6::3;:23:::0;5299:172::o;7752:1055:2:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:2;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;7727:25:8;;;7783:2;7768:18;;7761:34;7715:2;7700:18;;7553:248;7931:43:2;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:2;8290:16;;;;;;;;;;;;1005:51:3;;;;;9621:25:8;;;9662:18;;;9655:34;;;8283:4:2;9705:18:8;;;9698:60;9774:18;;;;9767:34;;;1005:51:3;;;;;;;;;;9593:19:8;;;;1005:51:3;;;995:62;;;;;;;;;8737:16:2;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:6;:16;;;;;;;;;;;;:39;;;;1600:41:3;;;;;9969:19:8;;;10004:12;;;9997:28;;;1600:41:3;;;;;;;;;10041:12:8;;;;1600:41:3;;;1590:52;;;;;8763:39:2;7752:1055;-1:-1:-1;;;;7752:1055:2:o;3394:225:6:-;3460:7;2031:12;2023:54;;;;-1:-1:-1;;;2023:54:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:19:6;::::1;3479:52;;;::::0;-1:-1:-1;;;3479:52:6;;3920:2:8;3479:52:6::1;::::0;::::1;3902:21:8::0;3959:2;3939:18;;;3932:30;-1:-1:-1;;;3978:18:8;;;3971:50;4038:18;;3479:52:6::1;3718:344:8::0;3479:52:6::1;3541:32;::::0;-1:-1:-1;;;;;3541:23:6;::::1;::::0;:32;::::1;;;::::0;3565:7;;3541:32:::1;::::0;;;3565:7;3541:23;:32;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3588:24:6::1;::::0;;-1:-1:-1;;;;;5419:32:8;;5401:51;;5483:2;5468:18;;5461:34;;;3588:24:6::1;::::0;5374:18:8;3588:24:6::1;;;;;;;3394:225:::0;;;:::o;4180:1113::-;4298:11;2031:12;2023:54;;;;-1:-1:-1;;;2023:54:6;;;;;;;:::i;:::-;4362:24:::1;4346:12;::::0;-1:-1:-1;;;4346:12:6;::::1;;;:40;::::0;::::1;;;;;;:::i;:::-;;4325:132;;;::::0;-1:-1:-1;;;4325:132:6;;9061:2:8;4325:132:6::1;::::0;::::1;9043:21:8::0;9100:2;9080:18;;;9073:30;9139:34;9119:18;;;9112:62;-1:-1:-1;;;9190:18:8;;;9183:43;9243:19;;4325:132:6::1;8859:409:8::0;4325:132:6::1;4467:23;4507:12;;4493:11;:26;;;;:::i;:::-;4544:37;::::0;;;:20:::1;:37;::::0;;;;;4529:12:::1;:52:::0;;-1:-1:-1;;;;;;4529:52:6::1;-1:-1:-1::0;;;;;4544:37:6;;::::1;4529:52:::0;;;::::1;::::0;;4467;;-1:-1:-1;4719:21:6::1;::::0;4803:3:::1;4779:20;4719:21:::0;4797:2:::1;4779:20;:::i;:::-;4778:28;;;;:::i;:::-;4750:56:::0;-1:-1:-1;4816:24:6::1;4868:3;4844:20;:15:::0;4862:2:::1;4844:20;:::i;:::-;4843:28;;;;:::i;:::-;4889:12;::::0;4816:55;;-1:-1:-1;4881:40:6::1;::::0;-1:-1:-1;;;;;4889:12:6::1;4903:17:::0;4881:7:::1;:40::i;:::-;4931:34;4939:7;1140:6:0::0;;-1:-1:-1;;;;;1140:6:0;;1068:85;4939:7:6::1;4948:16;4931:7;:34::i;:::-;4993:12;:35:::0;;-1:-1:-1;;;;4993:35:6::1;::::0;;5008:20:::1;5038:128;5067:12;;5059:5;:20;5038:128;;;5154:1;5123:27:::0;;;:20:::1;:27;::::0;;;;;;;;-1:-1:-1;;;;;5123:27:6::1;5104:47:::0;;:18:::1;:47:::0;;;;;:51;5144:5;5081:7:::1;5144:5:::0;5081:7:::1;:::i;:::-;;;;5038:128;;;-1:-1:-1::0;5190:1:6::1;5175:12;:16:::0;5201:10:::1;:24:::0;;;5256:12:::1;::::0;5240:46:::1;::::0;;-1:-1:-1;;;;;5256:12:6;;::::1;5401:51:8::0;;5270:15:6::1;5483:2:8::0;5468:18;;5461:34;5240:46:6::1;::::0;5374:18:8;5240:46:6::1;;;;;;;4315:978;;;;4180:1113:::0;;;:::o;404:180:8:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:8;;404:180;-1:-1:-1;404:180:8:o;589:127::-;650:10;645:3;641:20;638:1;631:31;681:4;678:1;671:15;705:4;702:1;695:15;721:344;869:2;854:18;;902:1;891:13;;881:144;;947:10;942:3;938:20;935:1;928:31;982:4;979:1;972:15;1010:4;1007:1;1000:15;881:144;1034:25;;;721:344;:::o;1489:248::-;1557:6;1565;1618:2;1606:9;1597:7;1593:23;1589:32;1586:52;;;1634:1;1631;1624:12;1586:52;-1:-1:-1;;1657:23:8;;;1727:2;1712:18;;;1699:32;;-1:-1:-1;1489:248:8:o;1742:286::-;1801:6;1854:2;1842:9;1833:7;1829:23;1825:32;1822:52;;;1870:1;1867;1860:12;1822:52;1896:23;;-1:-1:-1;;;;;1948:31:8;;1938:42;;1928:70;;1994:1;1991;1984:12;1928:70;2017:5;1742:286;-1:-1:-1;;;1742:286:8:o;2744:346::-;2946:2;2928:21;;;2985:2;2965:18;;;2958:30;-1:-1:-1;;;3019:2:8;3004:18;;2997:52;3081:2;3066:18;;2744:346::o;3095:127::-;3156:10;3151:3;3147:20;3144:1;3137:31;3187:4;3184:1;3177:15;3211:4;3208:1;3201:15;3227:128;3267:3;3298:1;3294:6;3291:1;3288:13;3285:39;;;3304:18;;:::i;:::-;-1:-1:-1;3340:9:8;;3227:128::o;3360:353::-;3562:2;3544:21;;;3601:2;3581:18;;;3574:30;3640:31;3635:2;3620:18;;3613:59;3704:2;3689:18;;3360:353::o;4067:168::-;4107:7;4173:1;4169;4165:6;4161:14;4158:1;4155:21;4150:1;4143:9;4136:17;4132:45;4129:71;;;4180:18;;:::i;:::-;-1:-1:-1;4220:9:8;;4067:168::o;4957:125::-;4997:4;5025:1;5022;5019:8;5016:34;;;5030:18;;:::i;:::-;-1:-1:-1;5067:9:8;;4957:125::o;5087:135::-;5126:3;-1:-1:-1;;5147:17:8;;5144:43;;;5167:18;;:::i;:::-;-1:-1:-1;5214:1:8;5203:13;;5087:135::o;5506:356::-;5708:2;5690:21;;;5727:18;;;5720:30;5786:34;5781:2;5766:18;;5759:62;5853:2;5838:18;;5506:356::o;6227:179::-;6305:13;;6358:22;6347:34;;6337:45;;6327:73;;6396:1;6393;6386:12;6327:73;6227:179;;;:::o;6411:473::-;6514:6;6522;6530;6538;6546;6599:3;6587:9;6578:7;6574:23;6570:33;6567:53;;;6616:1;6613;6606:12;6567:53;6639:39;6668:9;6639:39;:::i;:::-;6629:49;;6718:2;6707:9;6703:18;6697:25;6687:35;;6762:2;6751:9;6747:18;6741:25;6731:35;;6806:2;6795:9;6791:18;6785:25;6775:35;;6829:49;6873:3;6862:9;6858:19;6829:49;:::i;:::-;6819:59;;6411:473;;;;;;;;:::o;6889:127::-;6950:10;6945:3;6941:20;6938:1;6931:31;6981:4;6978:1;6971:15;7005:4;7002:1;6995:15;7021:120;7061:1;7087;7077:35;;7092:18;;:::i;:::-;-1:-1:-1;7126:9:8;;7021:120::o;7806:766::-;8038:1;8034;8029:3;8025:11;8021:19;8013:6;8009:32;7998:9;7991:51;7972:4;8061:2;8099:6;8094:2;8083:9;8079:18;8072:34;8142:2;8137;8126:9;8122:18;8115:30;8174:6;8168:13;8217:6;8212:2;8201:9;8197:18;8190:34;8242:1;8252:141;8266:6;8263:1;8260:13;8252:141;;;8362:14;;;8358:23;;8352:30;8327:17;;;8346:3;8323:27;8316:67;8281:10;;8252:141;;;8411:6;8408:1;8405:13;8402:92;;;8482:1;8476:3;8467:6;8456:9;8452:22;8448:32;8441:43;8402:92;-1:-1:-1;8555:2:8;8534:15;-1:-1:-1;;8530:29:8;8515:45;;;;8562:3;8511:55;;7806:766;-1:-1:-1;;;;;7806:766:8:o;8577:277::-;8644:6;8697:2;8685:9;8676:7;8672:23;8668:32;8665:52;;;8713:1;8710;8703:12;8665:52;8745:9;8739:16;8798:5;8791:13;8784:21;8777:5;8774:32;8764:60;;8820:1;8817;8810:12;9273:112;9305:1;9331;9321:35;;9336:18;;:::i;:::-;-1:-1:-1;9370:9:8;;9273:112::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    248,
    5660
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741BEF1A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xE586A4F0 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xF7D978A2 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xFCAC59C3 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xFE0837D1 EQ PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xB594F086 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xD84C72C5 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36013189 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x36013189 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x3FD43098 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x62DA8313 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6939864B EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EF53E0 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x72EA61C EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1593A8C7 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x2D97902F EQ PUSH2 0x1C7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x15A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x4F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1012 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x23D SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1041 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x7FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x15A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1012 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x982 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x108B JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1012 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x108B JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1012 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x3F6 PUSH2 0x102B JUMP JUMPDEST EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206C6F7474657279206973206E6F742066696E69736865642079657400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x4B8 SWAP2 PUSH2 0xBBB JUMP JUMPDEST SWAP1 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E DUP2 PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x516 JUMPI PUSH2 0x516 PUSH2 0x102B JUMP JUMPDEST EQ PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x553 SWAP1 TIMESTAMP PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x3D01C4BA0165A3F9C01CA4916EFD5EFD92DD9AC07569FF74D7047C7CDE668349 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5AA JUMPI PUSH2 0x5AA PUSH2 0x102B JUMP JUMPDEST EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x60E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP CALLER PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x668 DUP4 DUP3 PUSH2 0x1150 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207370656E64206D6F726520455448210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206C6F747465727920646561646C696E652069732066696E6973686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714 DUP5 DUP4 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x71E SWAP1 CALLVALUE PUSH2 0x116F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x730 JUMPI PUSH2 0x730 CALLER DUP3 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x777 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x78C DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x9D5CF8D6FC62210BAB9630B8D613C1B63D9CFE0E0D2D70DDA538D69C7E4F37BA CALLER PUSH1 0x1 PUSH1 0x3 SLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH2 0x7EE DUP2 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x733 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH2 0x8F3 DUP3 DUP3 PUSH2 0xE1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH2 0x941 PUSH2 0x102B JUMP JUMPDEST EQ PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x10BB JUMP JUMPDEST DUP1 DUP1 PUSH2 0x97C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x1119 JUMP JUMPDEST POP PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 PUSH5 0x2540BE400 PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP DUP2 DUP2 PUSH1 0x4 SLOAD PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x125B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB7A JUMPI PUSH2 0xB7A PUSH2 0x102B JUMP JUMPDEST EQ PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x10BB JUMP JUMPDEST DUP1 DUP1 PUSH2 0xBB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x1119 JUMP JUMPDEST POP PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC2B SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x12DB JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0xCF5 SWAP1 PUSH1 0x1 PUSH2 0x1101 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x696E76616C696420757365722061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDD6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x188C4D19B4FADD1889D9BD9BF0AB7C97E0719434751E6C05FEAC6339C1C001EC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5C PUSH2 0x102B JUMP JUMPDEST EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6E7472616374206973206E6F742070726F63657373696E672074 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1A19481DDA5B9B995C881E595D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x438 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP4 PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 SWAP2 POP SELFBALANCE SWAP1 PUSH1 0x64 PUSH2 0xF0F DUP4 PUSH1 0x5A PUSH2 0x1150 JUMP JUMPDEST PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x125B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xF2A DUP5 PUSH1 0xA PUSH2 0x1150 JUMP JUMPDEST PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0xF4D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0xF68 PUSH2 0xF62 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xFB9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE DUP1 PUSH2 0xFB1 DUP2 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF78 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x2 DUP7 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x64FFCA72C341AAB4874123AFB736AFBD6FAD01E6EAF584CFE0F320A144D3A576 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1063 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x131BDD1D195C9E481B5D5CDD0818994818DB1BDCD959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1114 JUMPI PUSH2 0x1114 PUSH2 0x10EB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x5468697320706172616D657465722063616E6E6F74206265207A65726F000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x10EB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1181 JUMPI PUSH2 0x1181 PUSH2 0x10EB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x119A JUMPI PUSH2 0x119A PUSH2 0x10EB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x11F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x120D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1216 DUP7 PUSH2 0x11D6 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x1239 PUSH1 0x80 DUP8 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x126A JUMPI PUSH2 0x126A PUSH2 0x1245 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12B1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0x1295 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x12C3 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x130C JUMPI PUSH2 0x130C PUSH2 0x1245 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT CALLCODE RETURNDATASIZE 0xD DUP2 0xB4 DUP14 PUSH16 0xB999AD1C003E91011C5AC9C898703618 0x1E 0xEF 0xDE PUSH7 0x1458EF3B64736F PUSH13 0x634300080B0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "LT",
      "path": "6"
    },
    "9": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x135"
    },
    "12": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "SHR",
      "path": "6"
    },
    "19": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "20": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x741BEF1A"
    },
    "25": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "GT",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "30": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "31": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDDCA3F43"
    },
    "36": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "GT",
      "path": "6"
    },
    "37": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "41": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "42": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDDCA3F43"
    },
    "47": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "48": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x309"
    },
    "51": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "52": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "53": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE586A4F0"
    },
    "58": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "59": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31F"
    },
    "62": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "63": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "64": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "70": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x334"
    },
    "73": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "74": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "75": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF7D978A2"
    },
    "80": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "81": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x354"
    },
    "84": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "85": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "86": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFCAC59C3"
    },
    "91": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x374"
    },
    "95": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "96": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "97": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFE0837D1"
    },
    "102": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A1"
    },
    "106": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "107": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "REVERT",
      "path": "6"
    },
    "111": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x741BEF1A"
    },
    "118": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "119": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x275"
    },
    "122": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "129": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "130": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x295"
    },
    "133": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x94985DDD"
    },
    "140": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "141": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B3"
    },
    "144": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "145": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "146": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB594F086"
    },
    "151": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D3"
    },
    "155": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "156": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "157": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD84C72C5"
    },
    "162": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F3"
    },
    "166": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "167": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "REVERT",
      "path": "6"
    },
    "171": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "172": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x36013189"
    },
    "178": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "GT",
      "path": "6"
    },
    "179": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "183": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "184": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x36013189"
    },
    "189": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "190": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD"
    },
    "193": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "194": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3FD43098"
    },
    "200": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "201": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F3"
    },
    "204": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "205": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "206": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x62DA8313"
    },
    "211": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "212": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x206"
    },
    "215": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "216": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "217": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6939864B"
    },
    "222": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "223": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21C"
    },
    "226": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "227": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "228": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x69EBE78E"
    },
    "233": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "234": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24A"
    },
    "237": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "238": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "239": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "244": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x260"
    },
    "248": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "249": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "REVERT",
      "path": "6"
    },
    "253": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "254": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "255": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6EF53E0"
    },
    "260": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "261": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A"
    },
    "264": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "265": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "266": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x72EA61C"
    },
    "271": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "272": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x177"
    },
    "275": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "276": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "277": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1593A8C7"
    },
    "282": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "283": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19B"
    },
    "286": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "287": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "288": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x160344E2"
    },
    "293": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "294": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2"
    },
    "297": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "298": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "299": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2D97902F"
    },
    "304": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "EQ",
      "path": "6"
    },
    "305": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C7"
    },
    "308": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "309": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "310": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "312": {
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "DUP1",
      "path": "6"
    },
    "313": {
      "first_revert": true,
      "fn": null,
      "offset": [
        248,
        5660
      ],
      "op": "REVERT",
      "path": "6"
    },
    "314": {
      "offset": [
        673,
        700
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "315": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "316": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "DUP1",
      "path": "6"
    },
    "317": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "318": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146"
    },
    "321": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "322": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "324": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "DUP1",
      "path": "6"
    },
    "325": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "REVERT",
      "path": "6"
    },
    "326": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "327": {
      "op": "POP"
    },
    "328": {
      "offset": [
        673,
        700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "330": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "331": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "334": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "341": {
      "op": "SHL"
    },
    "342": {
      "op": "SUB"
    },
    "343": {
      "offset": [
        673,
        700
      ],
      "op": "AND",
      "path": "6"
    },
    "344": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "DUP2",
      "path": "6"
    },
    "345": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "JUMP",
      "path": "6"
    },
    "346": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "347": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "349": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "356": {
      "op": "SHL"
    },
    "357": {
      "op": "SUB"
    },
    "358": {
      "op": "SWAP1"
    },
    "359": {
      "op": "SWAP2"
    },
    "360": {
      "op": "AND"
    },
    "361": {
      "op": "DUP2"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "365": {
      "op": "ADD"
    },
    "366": {
      "offset": [
        673,
        700
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "367": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "369": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "370": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "DUP1",
      "path": "6"
    },
    "371": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "372": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "SUB",
      "path": "6"
    },
    "373": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "374": {
      "fn": null,
      "offset": [
        673,
        700
      ],
      "op": "RETURN",
      "path": "6"
    },
    "375": {
      "offset": [
        506,
        529
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "376": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "377": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "DUP1",
      "path": "6"
    },
    "378": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "379": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x183"
    },
    "382": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "383": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "385": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "DUP1",
      "path": "6"
    },
    "386": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "REVERT",
      "path": "6"
    },
    "387": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "388": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "POP",
      "path": "6"
    },
    "389": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "392": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "394": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "395": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "DUP2",
      "path": "6"
    },
    "396": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "JUMP",
      "path": "6"
    },
    "397": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "398": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "400": {
      "fn": null,
      "offset": [
        506,
        529
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "401": {
      "op": "SWAP1"
    },
    "402": {
      "op": "DUP2"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "offset": [
        506,
        529
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16E"
    },
    "410": {
      "op": "JUMP"
    },
    "411": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "412": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "413": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "DUP1",
      "path": "6"
    },
    "414": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "415": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A7"
    },
    "418": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "419": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "421": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "DUP1",
      "path": "6"
    },
    "422": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "REVERT",
      "path": "6"
    },
    "423": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "424": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "POP",
      "path": "6"
    },
    "425": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "428": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D7"
    },
    "431": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        3841,
        4174
      ],
      "op": "JUMP",
      "path": "6"
    },
    "432": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "433": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "STOP",
      "path": "6"
    },
    "434": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "435": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "436": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "DUP1",
      "path": "6"
    },
    "437": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "438": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE"
    },
    "441": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "442": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "444": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "DUP1",
      "path": "6"
    },
    "445": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "REVERT",
      "path": "6"
    },
    "446": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "447": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "POP",
      "path": "6"
    },
    "448": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "451": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F6"
    },
    "454": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        3625,
        3835
      ],
      "op": "JUMP",
      "path": "6"
    },
    "455": {
      "offset": [
        560,
        590
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "456": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "457": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "DUP1",
      "path": "6"
    },
    "458": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "459": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "463": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "465": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "DUP1",
      "path": "6"
    },
    "466": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "REVERT",
      "path": "6"
    },
    "467": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "468": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "POP",
      "path": "6"
    },
    "469": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "472": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "474": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "475": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "DUP2",
      "path": "6"
    },
    "476": {
      "fn": "Lottery.startLottery",
      "offset": [
        560,
        590
      ],
      "op": "JUMP",
      "path": "6"
    },
    "477": {
      "offset": [
        442,
        467
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "478": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "479": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "DUP1",
      "path": "6"
    },
    "480": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "481": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E9"
    },
    "484": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "485": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "487": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "DUP1",
      "path": "6"
    },
    "488": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "REVERT",
      "path": "6"
    },
    "489": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "490": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "POP",
      "path": "6"
    },
    "491": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "494": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "496": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "497": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "DUP2",
      "path": "6"
    },
    "498": {
      "fn": "Lottery.startLottery",
      "offset": [
        442,
        467
      ],
      "op": "JUMP",
      "path": "6"
    },
    "499": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "500": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "503": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x201"
    },
    "506": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "507": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "509": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1012"
    },
    "512": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2367,
        3388
      ],
      "op": "JUMP",
      "path": "6"
    },
    "513": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "514": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x58B"
    },
    "517": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2367,
        3388
      ],
      "op": "JUMP",
      "path": "6"
    },
    "518": {
      "offset": [
        473,
        500
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "519": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "520": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "DUP1",
      "path": "6"
    },
    "521": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "522": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "525": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "526": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "528": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "DUP1",
      "path": "6"
    },
    "529": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "REVERT",
      "path": "6"
    },
    "530": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "531": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "POP",
      "path": "6"
    },
    "532": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "535": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "537": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "538": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "DUP2",
      "path": "6"
    },
    "539": {
      "fn": "Lottery.enterLottery",
      "offset": [
        473,
        500
      ],
      "op": "JUMP",
      "path": "6"
    },
    "540": {
      "offset": [
        403,
        436
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "541": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "542": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "DUP1",
      "path": "6"
    },
    "543": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "544": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x228"
    },
    "547": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "548": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "550": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "DUP1",
      "path": "6"
    },
    "551": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "REVERT",
      "path": "6"
    },
    "552": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "offset": [
        403,
        436
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "556": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "557": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23D"
    },
    "560": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "565": {
      "op": "SHL"
    },
    "566": {
      "offset": [
        403,
        436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "567": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "DIV",
      "path": "6"
    },
    "568": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "570": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "AND",
      "path": "6"
    },
    "571": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "DUP2",
      "path": "6"
    },
    "572": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "JUMP",
      "path": "6"
    },
    "573": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "574": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "576": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "577": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16E"
    },
    "580": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "581": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "582": {
      "fn": "Lottery.enterLottery",
      "offset": [
        403,
        436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1041"
    },
    "585": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        403,
        436
      ],
      "op": "JUMP",
      "path": "6"
    },
    "586": {
      "offset": [
        645,
        667
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "587": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "588": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "DUP1",
      "path": "6"
    },
    "589": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "590": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256"
    },
    "593": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "594": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "596": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "DUP1",
      "path": "6"
    },
    "597": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "REVERT",
      "path": "6"
    },
    "598": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "599": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "POP",
      "path": "6"
    },
    "600": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "603": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "605": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "606": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "DUP2",
      "path": "6"
    },
    "607": {
      "fn": "Lottery.enterLottery",
      "offset": [
        645,
        667
      ],
      "op": "JUMP",
      "path": "6"
    },
    "608": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "610": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "611": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "612": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26C"
    },
    "615": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "616": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "618": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "REVERT",
      "path": "0"
    },
    "620": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "621": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FD"
    },
    "628": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "629": {
      "offset": [
        824,
        862
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "630": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "631": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "DUP1",
      "path": "6"
    },
    "632": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x281"
    },
    "636": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "637": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "DUP1",
      "path": "6"
    },
    "640": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "REVERT",
      "path": "6"
    },
    "641": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "offset": [
        824,
        862
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "645": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "646": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "SUB"
    },
    "658": {
      "offset": [
        824,
        862
      ],
      "op": "AND",
      "path": "6"
    },
    "659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "DUP2",
      "path": "6"
    },
    "660": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        862
      ],
      "op": "JUMP",
      "path": "6"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "662": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "663": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "664": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "665": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A1"
    },
    "668": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "669": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "671": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "DUP1",
      "path": "0"
    },
    "672": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "REVERT",
      "path": "0"
    },
    "673": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "677": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "op": "SUB"
    },
    "686": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "687": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "690": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "691": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "692": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "693": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "694": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "695": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF"
    },
    "698": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "699": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "701": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "702": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "REVERT",
      "path": "2"
    },
    "703": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "704": {
      "op": "POP"
    },
    "705": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "708": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE"
    },
    "711": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "712": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "714": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1069"
    },
    "717": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "718": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "719": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x871"
    },
    "722": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "723": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "724": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "725": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "726": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "727": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DF"
    },
    "730": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "731": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "733": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "DUP1",
      "path": "6"
    },
    "734": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "REVERT",
      "path": "6"
    },
    "735": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "740": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EE"
    },
    "743": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "744": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "746": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1012"
    },
    "749": {
      "fn": "Lottery.changeDuration",
      "jump": "i",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "750": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "751": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F7"
    },
    "754": {
      "fn": "Lottery.changeDuration",
      "jump": "i",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "755": {
      "offset": [
        596,
        635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "756": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "757": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "DUP1",
      "path": "6"
    },
    "758": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "759": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FF"
    },
    "762": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "763": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "765": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "DUP1",
      "path": "6"
    },
    "766": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "REVERT",
      "path": "6"
    },
    "767": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "768": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "POP",
      "path": "6"
    },
    "769": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "772": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "774": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "775": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "DUP2",
      "path": "6"
    },
    "776": {
      "fn": "Lottery.changeDuration",
      "offset": [
        596,
        635
      ],
      "op": "JUMP",
      "path": "6"
    },
    "777": {
      "offset": [
        535,
        553
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "778": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "779": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "DUP1",
      "path": "6"
    },
    "780": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "781": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x315"
    },
    "784": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "785": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "787": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "DUP1",
      "path": "6"
    },
    "788": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "REVERT",
      "path": "6"
    },
    "789": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "790": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "POP",
      "path": "6"
    },
    "791": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "794": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "796": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "797": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "DUP2",
      "path": "6"
    },
    "798": {
      "fn": "Lottery.changeDuration",
      "offset": [
        535,
        553
      ],
      "op": "JUMP",
      "path": "6"
    },
    "799": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "800": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "801": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "DUP1",
      "path": "6"
    },
    "802": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "803": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32B"
    },
    "806": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "807": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "809": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "DUP1",
      "path": "6"
    },
    "810": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "REVERT",
      "path": "6"
    },
    "811": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "812": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "POP",
      "path": "6"
    },
    "813": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "816": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x982"
    },
    "819": {
      "fn": "Lottery.getEntryFee",
      "jump": "i",
      "offset": [
        2101,
        2361
      ],
      "op": "JUMP",
      "path": "6"
    },
    "820": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "DUP1",
      "path": "0"
    },
    "831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "REVERT",
      "path": "0"
    },
    "832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "837": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34F"
    },
    "840": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "841": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "843": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108B"
    },
    "846": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA45"
    },
    "851": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "852": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "853": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "854": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "DUP1",
      "path": "6"
    },
    "855": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "856": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x360"
    },
    "859": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "860": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "862": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "DUP1",
      "path": "6"
    },
    "863": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "REVERT",
      "path": "6"
    },
    "864": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "869": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36F"
    },
    "872": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "873": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "875": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1012"
    },
    "878": {
      "fn": "Lottery.changeEntryFee",
      "jump": "i",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMP",
      "path": "6"
    },
    "879": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "880": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB30"
    },
    "883": {
      "fn": "Lottery.changeEntryFee",
      "jump": "i",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMP",
      "path": "6"
    },
    "884": {
      "offset": [
        706,
        759
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "885": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "886": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "887": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "888": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x380"
    },
    "891": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "892": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "894": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "895": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "REVERT",
      "path": "6"
    },
    "896": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "offset": [
        706,
        759
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "901": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x38F"
    },
    "904": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "905": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "907": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x108B"
    },
    "910": {
      "fn": "Lottery.changeEntryFee",
      "jump": "i",
      "offset": [
        706,
        759
      ],
      "op": "JUMP",
      "path": "6"
    },
    "911": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "912": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "914": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "916": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "917": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "919": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "920": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "DUP2",
      "path": "6"
    },
    "921": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "922": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "924": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "925": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "926": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "927": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "DUP2",
      "path": "6"
    },
    "928": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        706,
        759
      ],
      "op": "JUMP",
      "path": "6"
    },
    "929": {
      "offset": [
        765,
        818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "930": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "931": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "932": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "933": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AD"
    },
    "936": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "937": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "939": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "940": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "REVERT",
      "path": "6"
    },
    "941": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "offset": [
        765,
        818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "946": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BC"
    },
    "949": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "950": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "952": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1012"
    },
    "955": {
      "fn": "Lottery.changeEntryFee",
      "jump": "i",
      "offset": [
        765,
        818
      ],
      "op": "JUMP",
      "path": "6"
    },
    "956": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "957": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "959": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "961": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "962": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "964": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "965": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "DUP2",
      "path": "6"
    },
    "966": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "967": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "969": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "970": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "971": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "op": "SUB"
    },
    "980": {
      "offset": [
        765,
        818
      ],
      "op": "AND",
      "path": "6"
    },
    "981": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "DUP2",
      "path": "6"
    },
    "982": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        765,
        818
      ],
      "op": "JUMP",
      "path": "6"
    },
    "983": {
      "fn": "Lottery.endLottery",
      "offset": [
        3841,
        4174
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "984": {
      "offset": [
        1783,
        1803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "986": {
      "offset": [
        1767,
        1779
      ],
      "op": "DUP1",
      "path": "6"
    },
    "987": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "offset": [
        1767,
        1779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "994": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "DIV",
      "path": "6"
    },
    "995": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "997": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "AND",
      "path": "6"
    },
    "998": {
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1000": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1001": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "GT",
      "path": "6"
    },
    "1002": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1003": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F6"
    },
    "1006": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1007": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F6"
    },
    "1010": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102B"
    },
    "1013": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        1767,
        1803
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1014": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1015": {
      "fn": "Lottery.endLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "EQ",
      "path": "6"
    },
    "1016": {
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x441"
    },
    "1019": {
      "offset": [
        1759,
        1830
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1020": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1022": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "offset": [
        1759,
        1830
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1031": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1034": {
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1036": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1037": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "ADD",
      "path": "6"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1043": {
      "op": "DUP3"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "op": "MSTORE"
    },
    "1046": {
      "op": "PUSH22",
      "value": "0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "1071": {
      "op": "SHL"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1074": {
      "op": "DUP3"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1079": {
      "op": "ADD"
    },
    "1080": {
      "offset": [
        1759,
        1830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1081": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1083": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1084": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1085": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1086": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "SUB",
      "path": "6"
    },
    "1087": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1088": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "1089": {
      "fn": "Lottery.endLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1090": {
      "fn": "Lottery.endLottery",
      "offset": [
        3931,
        3955
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x7"
    },
    "1092": {
      "fn": "Lottery.endLottery",
      "offset": [
        3931,
        3955
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1093": {
      "fn": "Lottery.endLottery",
      "offset": [
        3912,
        3927
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1094": {
      "fn": "Lottery.endLottery",
      "offset": [
        3912,
        3955
      ],
      "op": "LT",
      "path": "6"
    },
    "1095": {
      "branch": 45,
      "fn": "Lottery.endLottery",
      "offset": [
        3912,
        3955
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1096": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x493"
    },
    "1099": {
      "branch": 45,
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1100": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1102": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1111": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1114": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1116": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1117": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "ADD",
      "path": "6"
    },
    "1118": {
      "op": "MSTORE"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "ADD"
    },
    "1125": {
      "op": "MSTORE"
    },
    "1126": {
      "op": "PUSH32",
      "value": "0x546865206C6F7474657279206973206E6F742066696E69736865642079657400"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1161": {
      "op": "DUP3"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "1170": {
      "op": "JUMP"
    },
    "1171": {
      "fn": "Lottery.endLottery",
      "offset": [
        3891,
        4012
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1172": {
      "fn": "Lottery.endLottery",
      "offset": [
        4022,
        4034
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "1174": {
      "fn": "Lottery.endLottery",
      "offset": [
        4022,
        4061
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1175": {
      "fn": "Lottery.endLottery",
      "offset": [
        4022,
        4061
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "NOT"
    },
    "1182": {
      "fn": "Lottery.endLottery",
      "offset": [
        4022,
        4061
      ],
      "op": "AND",
      "path": "6"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1187": {
      "op": "SHL"
    },
    "1188": {
      "fn": "Lottery.endLottery",
      "offset": [
        4022,
        4061
      ],
      "op": "OR",
      "path": "6"
    },
    "1189": {
      "fn": "Lottery.endLottery",
      "offset": [
        4022,
        4061
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1190": {
      "fn": "Lottery.endLottery",
      "offset": [
        4022,
        4061
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1191": {
      "fn": "Lottery.endLottery",
      "offset": [
        4109,
        4116
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1193": {
      "fn": "Lottery.endLottery",
      "offset": [
        4109,
        4116
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1194": {
      "fn": "Lottery.endLottery",
      "offset": [
        4118,
        4121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1196": {
      "fn": "Lottery.endLottery",
      "offset": [
        4118,
        4121
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1199": {
      "op": "SWAP2"
    },
    "1200": {
      "fn": "Lottery.endLottery",
      "offset": [
        4091,
        4122
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4B8"
    },
    "1203": {
      "fn": "Lottery.endLottery",
      "offset": [
        4091,
        4122
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1204": {
      "fn": "Lottery.endLottery",
      "offset": [
        4091,
        4108
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBBB"
    },
    "1207": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        4091,
        4122
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1208": {
      "fn": "Lottery.endLottery",
      "offset": [
        4091,
        4122
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1209": {
      "fn": "Lottery.endLottery",
      "offset": [
        4071,
        4122
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1210": {
      "fn": "Lottery.endLottery",
      "offset": [
        4071,
        4122
      ],
      "op": "POP",
      "path": "6"
    },
    "1211": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 3,
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "1244": {
      "fn": "Lottery.endLottery",
      "offset": [
        4157,
        4166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1245": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1247": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1248": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4EB"
    },
    "1251": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1252": {
      "op": "DUP2"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "SWAP1"
    },
    "1258": {
      "op": "JUMP"
    },
    "1259": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1260": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1262": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1263": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1264": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1265": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "SUB",
      "path": "6"
    },
    "1266": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1267": {
      "fn": "Lottery.endLottery",
      "offset": [
        4137,
        4167
      ],
      "op": "LOG1",
      "path": "6"
    },
    "1268": {
      "fn": "Lottery.endLottery",
      "offset": [
        3881,
        4174
      ],
      "op": "POP",
      "path": "6"
    },
    "1269": {
      "fn": "Lottery.endLottery",
      "jump": "o",
      "offset": [
        3841,
        4174
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1270": {
      "fn": "Lottery.startLottery",
      "offset": [
        3625,
        3835
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1271": {
      "offset": [
        1908,
        1928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1273": {
      "offset": [
        1892,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1275": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1904
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "offset": [
        1892,
        1904
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1282": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1904
      ],
      "op": "DIV",
      "path": "6"
    },
    "1283": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1285": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1904
      ],
      "op": "AND",
      "path": "6"
    },
    "1286": {
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1288": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1289": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "GT",
      "path": "6"
    },
    "1290": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1291": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x516"
    },
    "1294": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1295": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x516"
    },
    "1298": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102B"
    },
    "1301": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1302": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1303": {
      "fn": "Lottery.startLottery",
      "offset": [
        1892,
        1928
      ],
      "op": "EQ",
      "path": "6"
    },
    "1304": {
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x533"
    },
    "1307": {
      "offset": [
        1884,
        1955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1308": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1310": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "offset": [
        1884,
        1955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1319": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1320": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1322": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "ADD",
      "path": "6"
    },
    "1323": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "1326": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1327": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10BB"
    },
    "1330": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        1884,
        1955
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1331": {
      "fn": "Lottery.startLottery",
      "offset": [
        1884,
        1955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1332": {
      "fn": "Lottery.startLottery",
      "offset": [
        3692,
        3712
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x1"
    },
    "1334": {
      "fn": "Lottery.startLottery",
      "offset": [
        3677,
        3712
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1335": {
      "fn": "Lottery.startLottery",
      "offset": [
        3677,
        3712
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "op": "NOT"
    },
    "1342": {
      "fn": "Lottery.startLottery",
      "offset": [
        3677,
        3712
      ],
      "op": "AND",
      "path": "6"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "fn": "Lottery.startLottery",
      "offset": [
        3677,
        3712
      ],
      "op": "OR",
      "path": "6"
    },
    "1349": {
      "fn": "Lottery.startLottery",
      "offset": [
        3677,
        3712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1350": {
      "fn": "Lottery.startLottery",
      "offset": [
        3677,
        3712
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1351": {
      "fn": "Lottery.startLottery",
      "offset": [
        3767,
        3782
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x6"
    },
    "1353": {
      "fn": "Lottery.startLottery",
      "offset": [
        3767,
        3782
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1354": {
      "fn": "Lottery.startLottery",
      "offset": [
        3749,
        3782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x553"
    },
    "1357": {
      "fn": "Lottery.startLottery",
      "offset": [
        3749,
        3782
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1358": {
      "fn": "Lottery.startLottery",
      "offset": [
        3749,
        3764
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1359": {
      "fn": "Lottery.startLottery",
      "offset": [
        3749,
        3782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1101"
    },
    "1362": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        3749,
        3782
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1363": {
      "fn": "Lottery.startLottery",
      "offset": [
        3749,
        3782
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1364": {
      "fn": "Lottery.startLottery",
      "offset": [
        3722,
        3746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "1366": {
      "fn": "Lottery.startLottery",
      "offset": [
        3722,
        3782
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1367": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x40"
    },
    "1369": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1370": {
      "fn": "Lottery.startLottery",
      "offset": [
        3812,
        3827
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1371": {
      "op": "DUP2"
    },
    "1372": {
      "op": "MSTORE"
    },
    "1373": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x3D01C4BA0165A3F9C01CA4916EFD5EFD92DD9AC07569FF74D7047C7CDE668349"
    },
    "1406": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1412": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1413": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1414": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1415": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "SUB",
      "path": "6"
    },
    "1416": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1417": {
      "fn": "Lottery.startLottery",
      "offset": [
        3797,
        3828
      ],
      "op": "LOG1",
      "path": "6"
    },
    "1418": {
      "fn": "Lottery.startLottery",
      "jump": "o",
      "offset": [
        3625,
        3835
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1419": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1420": {
      "offset": [
        1783,
        1803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1422": {
      "offset": [
        1767,
        1779
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1423": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "offset": [
        1767,
        1779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1430": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "DIV",
      "path": "6"
    },
    "1431": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1433": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1779
      ],
      "op": "AND",
      "path": "6"
    },
    "1434": {
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1436": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1437": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "GT",
      "path": "6"
    },
    "1438": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1439": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5AA"
    },
    "1442": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1443": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5AA"
    },
    "1446": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102B"
    },
    "1449": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        1767,
        1803
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1450": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1451": {
      "branch": 46,
      "fn": "Lottery.enterLottery",
      "offset": [
        1767,
        1803
      ],
      "op": "EQ",
      "path": "6"
    },
    "1452": {
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5F0"
    },
    "1455": {
      "branch": 46,
      "offset": [
        1759,
        1830
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1456": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1458": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "offset": [
        1759,
        1830
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1467": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1470": {
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1472": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1473": {
      "fn": "Lottery.enterLottery",
      "offset": [
        1759,
        1830
      ],
      "op": "ADD",
      "path": "6"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1479": {
      "op": "DUP3"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "PUSH22",
      "value": "0x131BDD1D195C9E481B5D5CDD081899481BDC195B9959"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1510": {
      "op": "DUP3"
    },
    "1511": {
      "op": "ADD"
    },
    "1512": {
      "op": "MSTORE"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "offset": [
        1759,
        1830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "1519": {
      "op": "JUMP"
    },
    "1520": {
      "offset": [
        1759,
        1830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1521": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2485,
        2501
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1522": {
      "offset": [
        2031,
        2043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1523": {
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60E"
    },
    "1526": {
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1527": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1529": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "offset": [
        2023,
        2077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1538": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1539": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1541": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "ADD",
      "path": "6"
    },
    "1542": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "1545": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1546": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "1549": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1550": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1551": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2517,
        2529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1553": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2532,
        2545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x618"
    },
    "1556": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2532,
        2543
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x982"
    },
    "1559": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2532,
        2545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1560": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2532,
        2545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1561": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2517,
        2545
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2563,
        2573
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "1564": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x65E"
    },
    "1567": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1568": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1570": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1579": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1582": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1584": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1585": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "ADD",
      "path": "6"
    },
    "1586": {
      "op": "MSTORE"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1591": {
      "op": "DUP3"
    },
    "1592": {
      "op": "ADD"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH20",
      "value": "0x696E76616C696420757365722061646472657373"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1617": {
      "op": "SHL"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1620": {
      "op": "DUP3"
    },
    "1621": {
      "op": "ADD"
    },
    "1622": {
      "op": "MSTORE"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1625": {
      "op": "ADD"
    },
    "1626": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "1629": {
      "op": "JUMP"
    },
    "1630": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2555,
        2612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1631": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2643,
        2666
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 8,
      "value": "0x668"
    },
    "1634": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2650,
        2666
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1635": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2643,
        2647
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1636": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2643,
        2666
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1150"
    },
    "1639": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2643,
        2666
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1640": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2643,
        2666
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1641": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2630,
        2639
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1642": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2630,
        2666
      ],
      "op": "LT",
      "path": "6"
    },
    "1643": {
      "branch": 47,
      "fn": "Lottery.enterLottery",
      "offset": [
        2630,
        2666
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1644": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B7"
    },
    "1647": {
      "branch": 47,
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1648": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1650": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1659": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1662": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1664": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1665": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "ADD",
      "path": "6"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH32",
      "value": "0x596F75206E65656420746F207370656E64206D6F726520455448210000000000"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "1718": {
      "op": "JUMP"
    },
    "1719": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2622,
        2698
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1720": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2747,
        2771
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x7"
    },
    "1722": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2747,
        2771
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1723": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2729,
        2744
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1724": {
      "branch": 48,
      "fn": "Lottery.enterLottery",
      "offset": [
        2729,
        2771
      ],
      "op": "LT",
      "path": "6"
    },
    "1725": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x708"
    },
    "1728": {
      "branch": 48,
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1729": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1731": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1740": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1743": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1745": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1746": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "ADD",
      "path": "6"
    },
    "1747": {
      "op": "DUP2"
    },
    "1748": {
      "op": "SWAP1"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1752": {
      "op": "DUP3"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "op": "MSTORE"
    },
    "1755": {
      "op": "PUSH32",
      "value": "0x546865206C6F747465727920646561646C696E652069732066696E6973686564"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "1799": {
      "op": "JUMP"
    },
    "1800": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2708,
        2830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1801": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2930,
        2954
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1803": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2970,
        2993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x714"
    },
    "1806": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2977,
        2993
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1807": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2970,
        2974
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1808": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2970,
        2993
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1150"
    },
    "1811": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2970,
        2993
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1812": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2970,
        2993
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1813": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2957,
        2994
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x71E"
    },
    "1816": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2957,
        2994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1817": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2957,
        2966
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1818": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2957,
        2994
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116F"
    },
    "1821": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        2957,
        2994
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1822": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2957,
        2994
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1823": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2930,
        2994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1824": {
      "op": "POP"
    },
    "1825": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3008,
        3028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1826": {
      "branch": 49,
      "fn": "Lottery.enterLottery",
      "offset": [
        3008,
        3028
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1827": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3004,
        3092
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x730"
    },
    "1830": {
      "branch": 49,
      "fn": "Lottery.enterLottery",
      "offset": [
        3004,
        3092
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1831": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3044,
        3081
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 10,
      "value": "0x730"
    },
    "1834": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3052,
        3062
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1835": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3064,
        3080
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1836": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3044,
        3051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD35"
    },
    "1839": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3044,
        3081
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1840": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3044,
        3081
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1841": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3115,
        3130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1843": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1844": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3146,
        3162
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1845": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3136,
        3143
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1846": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3136,
        3162
      ],
      "op": "LT",
      "path": "6"
    },
    "1847": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1848": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F6"
    },
    "1851": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1852": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3210,
        3222
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x3"
    },
    "1854": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3210,
        3222
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1855": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1857": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1858": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1859": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1860": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3209
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "1862": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1864": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1865": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1866": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1867": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1869": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1870": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1871": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3223
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1872": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1873": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1880": {
      "op": "SHL"
    },
    "1881": {
      "op": "SUB"
    },
    "1882": {
      "op": "NOT"
    },
    "1883": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "AND",
      "path": "6"
    },
    "1884": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3226,
        3236
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1885": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1886": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1887": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "OR",
      "path": "6"
    },
    "1888": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1889": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1890": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3189,
        3236
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1891": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3280
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 12
    },
    "1892": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3280
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1893": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3268
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "1895": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3280
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1896": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3280
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1897": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3280
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1898": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3280
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1899": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3280
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1900": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1901": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1902": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1903": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x777"
    },
    "1906": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1907": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1186"
    },
    "1910": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3250,
        3282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1911": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1912": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1913": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1914": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3250,
        3282
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3308
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x3"
    },
    "1919": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1920": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1921": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1922": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3308
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1924": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x78C"
    },
    "1927": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1928": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1186"
    },
    "1931": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3296,
        3310
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1932": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1933": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1934": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1935": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "POP",
      "path": "6"
    },
    "1936": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1937": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3296,
        3310
      ],
      "op": "POP",
      "path": "6"
    },
    "1938": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 14,
      "value": "0x9D5CF8D6FC62210BAB9630B8D613C1B63D9CFE0E0D2D70DDA538D69C7E4F37BA"
    },
    "1971": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3338,
        3348
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1972": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3365,
        3366
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1974": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3350,
        3362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1976": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3350,
        3362
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1977": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3350,
        3366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C2"
    },
    "1980": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3350,
        3366
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1981": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3350,
        3366
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1982": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3350,
        3366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116F"
    },
    "1985": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3350,
        3366
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1986": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3350,
        3366
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1987": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1989": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1990": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "op": "SUB"
    },
    "1999": {
      "op": "SWAP1"
    },
    "2000": {
      "op": "SWAP4"
    },
    "2001": {
      "op": "AND"
    },
    "2002": {
      "op": "DUP4"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2006": {
      "op": "DUP4"
    },
    "2007": {
      "op": "ADD"
    },
    "2008": {
      "op": "SWAP2"
    },
    "2009": {
      "op": "SWAP1"
    },
    "2010": {
      "op": "SWAP2"
    },
    "2011": {
      "op": "MSTORE"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2015": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2016": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2017": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2018": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "SUB",
      "path": "6"
    },
    "2019": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2020": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3329,
        3367
      ],
      "op": "LOG1",
      "path": "6"
    },
    "2021": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 15
    },
    "2022": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7EE"
    },
    "2025": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2026": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1186"
    },
    "2029": {
      "fn": "Lottery.enterLottery",
      "jump": "i",
      "offset": [
        3164,
        3173
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2030": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2031": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2032": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "POP",
      "path": "6"
    },
    "2033": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3164,
        3173
      ],
      "op": "POP",
      "path": "6"
    },
    "2034": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x733"
    },
    "2037": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2038": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2039": {
      "fn": "Lottery.enterLottery",
      "offset": [
        3110,
        3382
      ],
      "op": "POP",
      "path": "6"
    },
    "2040": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2507,
        3388
      ],
      "op": "POP",
      "path": "6"
    },
    "2041": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2507,
        3388
      ],
      "op": "POP",
      "path": "6"
    },
    "2042": {
      "offset": [
        1840,
        1841
      ],
      "op": "POP",
      "path": "6"
    },
    "2043": {
      "fn": "Lottery.enterLottery",
      "offset": [
        2367,
        3388
      ],
      "op": "POP",
      "path": "6"
    },
    "2044": {
      "fn": "Lottery.enterLottery",
      "jump": "o",
      "offset": [
        2367,
        3388
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2045": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2046": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2048": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "op": "SUB"
    },
    "2057": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2058": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 16
    },
    "2059": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2060": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x827"
    },
    "2063": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2064": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2066": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2075": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2076": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2078": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2079": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "2082": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2083": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A1"
    },
    "2086": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2087": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2088": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "2090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2091": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2093": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2094": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2096": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2103": {
      "op": "SHL"
    },
    "2104": {
      "op": "SUB"
    },
    "2105": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "AND",
      "path": "0"
    },
    "2106": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2107": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2141": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2142": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2144": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1825
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "2146": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "SUB"
    },
    "2156": {
      "op": "NOT"
    },
    "2157": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "AND",
      "path": "0"
    },
    "2158": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2159": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2160": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2161": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2162": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 19
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "2204": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "2"
    },
    "2205": {
      "branch": 54,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "2"
    },
    "2206": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E9"
    },
    "2209": {
      "branch": 54,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2210": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2212": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2221": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2224": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2226": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2227": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "2"
    },
    "2228": {
      "op": "MSTORE"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2233": {
      "op": "DUP3"
    },
    "2234": {
      "op": "ADD"
    },
    "2235": {
      "op": "MSTORE"
    },
    "2236": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2271": {
      "op": "DUP3"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "op": "MSTORE"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2276": {
      "op": "ADD"
    },
    "2277": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x438"
    },
    "2280": {
      "op": "JUMP"
    },
    "2281": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2282": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0x8F3"
    },
    "2285": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9846
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2286": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9848,
        9858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2287": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1E"
    },
    "2290": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2291": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2292": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "POP",
      "path": "2"
    },
    "2293": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "POP",
      "path": "2"
    },
    "2294": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2295": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2296": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2298": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2305": {
      "op": "SHL"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2308": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2309": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2310": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x921"
    },
    "2313": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2314": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2316": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2326": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2328": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2329": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "2332": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2333": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A1"
    },
    "2336": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2337": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2338": {
      "offset": [
        1908,
        1928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2340": {
      "offset": [
        1892,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2342": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "offset": [
        1892,
        1904
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2349": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "DIV",
      "path": "6"
    },
    "2350": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2352": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "AND",
      "path": "6"
    },
    "2353": {
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2355": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2356": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "GT",
      "path": "6"
    },
    "2357": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2358": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x941"
    },
    "2361": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2362": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x941"
    },
    "2365": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102B"
    },
    "2368": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2369": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2370": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "EQ",
      "path": "6"
    },
    "2371": {
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x95E"
    },
    "2374": {
      "offset": [
        1884,
        1955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2375": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2377": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2384": {
      "op": "SHL"
    },
    "2385": {
      "offset": [
        1884,
        1955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2386": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2387": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2389": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "ADD",
      "path": "6"
    },
    "2390": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "2393": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2394": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10BB"
    },
    "2397": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1884,
        1955
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2398": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2399": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5593,
        5605
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2400": {
      "offset": [
        2031,
        2043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2401": {
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97C"
    },
    "2404": {
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2405": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2407": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "offset": [
        2023,
        2077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2416": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2417": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2419": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "ADD",
      "path": "6"
    },
    "2420": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "2423": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2424": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "2427": {
      "fn": "Lottery.changeDuration",
      "jump": "i",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2428": {
      "fn": "Lottery.changeDuration",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2429": {
      "op": "POP"
    },
    "2430": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5621,
        5636
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 21,
      "value": "0x6"
    },
    "2432": {
      "fn": "Lottery.changeDuration",
      "offset": [
        5621,
        5651
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2433": {
      "fn": "Lottery.changeDuration",
      "jump": "o",
      "offset": [
        5477,
        5658
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2434": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2435": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2145,
        2152
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2437": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2167,
        2179
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2438": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "2440": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2442": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2443": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2444": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2445": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2448": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "EXP",
      "path": "6"
    },
    "2449": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2450": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "DIV",
      "path": "6"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "op": "SUB"
    },
    "2459": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2198
      ],
      "op": "AND",
      "path": "6"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2466": {
      "op": "SHL"
    },
    "2467": {
      "op": "SUB"
    },
    "2468": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2214
      ],
      "op": "AND",
      "path": "6"
    },
    "2469": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2214
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFEAF968C"
    },
    "2474": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2476": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2477": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2478": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "2483": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "AND",
      "path": "6"
    },
    "2484": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2486": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "SHL",
      "path": "6"
    },
    "2487": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2488": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2489": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2491": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "ADD",
      "path": "6"
    },
    "2492": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "2494": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2496": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2497": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2498": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2499": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "SUB",
      "path": "6"
    },
    "2500": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2501": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2502": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "GAS",
      "path": "6"
    },
    "2503": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2504": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2505": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2506": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2507": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D8"
    },
    "2510": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2511": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2512": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2514": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2515": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2516": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2517": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2519": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2520": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2521": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2522": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2523": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2524": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2525": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2527": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2528": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2529": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2531": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "NOT",
      "path": "6"
    },
    "2532": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2534": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2535": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "ADD",
      "path": "6"
    },
    "2536": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "AND",
      "path": "6"
    },
    "2537": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2538": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "ADD",
      "path": "6"
    },
    "2539": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2540": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2542": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2543": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2544": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2545": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "ADD",
      "path": "6"
    },
    "2546": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2547": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FC"
    },
    "2550": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2551": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2552": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11F5"
    },
    "2555": {
      "fn": "Lottery.getEntryFee",
      "jump": "i",
      "offset": [
        2189,
        2216
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2556": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2189,
        2216
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2557": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2164,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2558": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2164,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2559": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2164,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2560": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2164,
        2216
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2561": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2164,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2562": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2164,
        2216
      ],
      "op": "POP",
      "path": "6"
    },
    "2563": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2226,
        2242
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2565": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2253,
        2258
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2566": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2262,
        2268
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0x2540BE400"
    },
    "2572": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2245,
        2268
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA15"
    },
    "2575": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2245,
        2268
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2576": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2245,
        2268
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2577": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2245,
        2268
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1150"
    },
    "2580": {
      "fn": "Lottery.getEntryFee",
      "jump": "i",
      "offset": [
        2245,
        2268
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2581": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2245,
        2268
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2582": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2226,
        2268
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2583": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2226,
        2268
      ],
      "op": "POP",
      "path": "6"
    },
    "2584": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2278,
        2295
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2586": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2298,
        2304
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "2595": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2278,
        2304
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2596": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2278,
        2304
      ],
      "op": "POP",
      "path": "6"
    },
    "2597": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2346,
        2354
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 22
    },
    "2598": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2333,
        2342
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2599": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2322,
        2330
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2601": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2322,
        2330
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2602": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2322,
        2342
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA33"
    },
    "2605": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2322,
        2342
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2606": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2322,
        2342
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2607": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2322,
        2342
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1150"
    },
    "2610": {
      "fn": "Lottery.getEntryFee",
      "jump": "i",
      "offset": [
        2322,
        2342
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2611": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2322,
        2342
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2612": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2321,
        2354
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3D"
    },
    "2615": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2321,
        2354
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2616": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2321,
        2354
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2617": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2321,
        2354
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125B"
    },
    "2620": {
      "fn": "Lottery.getEntryFee",
      "jump": "i",
      "offset": [
        2321,
        2354
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2621": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2321,
        2354
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2622": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2314,
        2354
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2623": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2314,
        2354
      ],
      "op": "POP",
      "path": "6"
    },
    "2624": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2314,
        2354
      ],
      "op": "POP",
      "path": "6"
    },
    "2625": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2314,
        2354
      ],
      "op": "POP",
      "path": "6"
    },
    "2626": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2314,
        2354
      ],
      "op": "POP",
      "path": "6"
    },
    "2627": {
      "fn": "Lottery.getEntryFee",
      "offset": [
        2101,
        2361
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2628": {
      "fn": "Lottery.getEntryFee",
      "jump": "o",
      "offset": [
        2101,
        2361
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2630": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2632": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2639": {
      "op": "SHL"
    },
    "2640": {
      "op": "SUB"
    },
    "2641": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2642": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2643": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2644": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6F"
    },
    "2647": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2648": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2650": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2657": {
      "op": "SHL"
    },
    "2658": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2659": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2660": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2662": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2663": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "2666": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2667": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A1"
    },
    "2670": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2671": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2678": {
      "op": "SHL"
    },
    "2679": {
      "op": "SUB"
    },
    "2680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 23
    },
    "2681": {
      "branch": 53,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "AND",
      "path": "0"
    },
    "2682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD4"
    },
    "2685": {
      "branch": 53,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2695": {
      "op": "SHL"
    },
    "2696": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2702": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "ADD",
      "path": "0"
    },
    "2704": {
      "op": "MSTORE"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2709": {
      "op": "DUP3"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "op": "MSTORE"
    },
    "2712": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2747": {
      "op": "DUP3"
    },
    "2748": {
      "op": "ADD"
    },
    "2749": {
      "op": "MSTORE"
    },
    "2750": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2759": {
      "op": "SHL"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2762": {
      "op": "DUP3"
    },
    "2763": {
      "op": "ADD"
    },
    "2764": {
      "op": "MSTORE"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2767": {
      "op": "ADD"
    },
    "2768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "2771": {
      "op": "JUMP"
    },
    "2772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x1"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2776": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2778": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2785": {
      "op": "SHL"
    },
    "2786": {
      "op": "SUB"
    },
    "2787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "AND",
      "path": "0"
    },
    "2790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "AND",
      "path": "0"
    },
    "2792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2826": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x1"
    },
    "2833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "op": "SUB"
    },
    "2843": {
      "op": "NOT"
    },
    "2844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "op": "SUB"
    },
    "2853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2854": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "2857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2858": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "OR",
      "path": "0"
    },
    "2861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2863": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2864": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2865": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2867": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "op": "SUB"
    },
    "2876": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "2877": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2878": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "2879": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5A"
    },
    "2882": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2883": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2885": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2894": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2895": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2897": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "2898": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "2901": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2902": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A1"
    },
    "2905": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2906": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2907": {
      "offset": [
        1908,
        1928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2909": {
      "offset": [
        1892,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2911": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "offset": [
        1892,
        1904
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2918": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "DIV",
      "path": "6"
    },
    "2919": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2921": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1904
      ],
      "op": "AND",
      "path": "6"
    },
    "2922": {
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2924": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2925": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "GT",
      "path": "6"
    },
    "2926": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2927": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7A"
    },
    "2930": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2931": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7A"
    },
    "2934": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102B"
    },
    "2937": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2938": {
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2939": {
      "branch": 50,
      "fn": "Context._msgSender",
      "offset": [
        1892,
        1928
      ],
      "op": "EQ",
      "path": "6"
    },
    "2940": {
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB97"
    },
    "2943": {
      "branch": 50,
      "offset": [
        1884,
        1955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2944": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2946": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2953": {
      "op": "SHL"
    },
    "2954": {
      "offset": [
        1884,
        1955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2955": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2956": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2958": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "ADD",
      "path": "6"
    },
    "2959": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "2962": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2963": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10BB"
    },
    "2966": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1884,
        1955
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2967": {
      "fn": "Context._msgSender",
      "offset": [
        1884,
        1955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2968": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5413,
        5425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2969": {
      "offset": [
        2031,
        2043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2970": {
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB5"
    },
    "2973": {
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2974": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2976": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "offset": [
        2023,
        2077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2985": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2986": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2988": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "ADD",
      "path": "6"
    },
    "2989": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "2992": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2993": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "2996": {
      "fn": "Lottery.changeEntryFee",
      "jump": "i",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2997": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5441,
        5449
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x4"
    },
    "3001": {
      "fn": "Lottery.changeEntryFee",
      "offset": [
        5441,
        5464
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3002": {
      "fn": "Lottery.changeEntryFee",
      "jump": "o",
      "offset": [
        5299,
        5471
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3003": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3004": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3006": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 27,
      "value": "0x0"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3045": {
      "op": "SHL"
    },
    "3046": {
      "op": "SUB"
    },
    "3047": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "2"
    },
    "3048": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4000AEA0"
    },
    "3053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "3086": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3087": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3088": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3090": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3092": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3093": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3095": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "2"
    },
    "3096": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC2B"
    },
    "3099": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3100": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3101": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3102": {
      "op": "SWAP2"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "MSTORE"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3107": {
      "op": "DUP3"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "op": "SWAP1"
    },
    "3114": {
      "op": "JUMP"
    },
    "3115": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3116": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3118": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3119": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3121": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3122": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3123": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "2"
    },
    "3124": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "2"
    },
    "3125": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3126": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3127": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3128": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3130": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3131": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3133": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3134": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3135": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3140": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "2"
    },
    "3141": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3143": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "2"
    },
    "3144": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3145": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3146": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3148": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3149": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC58"
    },
    "3152": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3153": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3154": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3155": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3156": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126F"
    },
    "3159": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3160": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3161": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3163": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3165": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3166": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3167": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3168": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "2"
    },
    "3169": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3170": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3172": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3173": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "2"
    },
    "3174": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "2"
    },
    "3175": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3176": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3177": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3178": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC77"
    },
    "3181": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3182": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3183": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3185": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3186": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3187": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3188": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3190": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3191": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3192": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3193": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3194": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3195": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3196": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3198": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3199": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3200": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3202": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "2"
    },
    "3203": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3205": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3206": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3207": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "2"
    },
    "3208": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3209": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3210": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3211": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3213": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3214": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "2"
    },
    "3215": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3216": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "2"
    },
    "3217": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3218": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC9B"
    },
    "3221": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3222": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3223": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12DB"
    },
    "3226": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3227": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3231": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3232": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3233": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3234": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3236": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3237": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3238": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3239": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3241": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3242": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3243": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3244": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3245": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 28
    },
    "3246": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3247": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3248": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3249": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3250": {
      "op": "DUP9"
    },
    "3251": {
      "op": "SWAP1"
    },
    "3252": {
      "op": "MSTORE"
    },
    "3253": {
      "op": "DUP1"
    },
    "3254": {
      "op": "DUP4"
    },
    "3255": {
      "op": "ADD"
    },
    "3256": {
      "op": "DUP6"
    },
    "3257": {
      "op": "SWAP1"
    },
    "3258": {
      "op": "MSTORE"
    },
    "3259": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3262": {
      "op": "DUP3"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "op": "MSTORE"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3267": {
      "op": "DUP1"
    },
    "3268": {
      "op": "DUP3"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "DUP4"
    },
    "3271": {
      "op": "SWAP1"
    },
    "3272": {
      "op": "MSTORE"
    },
    "3273": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3274": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3275": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3276": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3277": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "3"
    },
    "3278": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3279": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3280": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3281": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3282": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SWAP1"
    },
    "3286": {
      "op": "SWAP2"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3289": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3290": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3291": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3292": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3293": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3294": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3295": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "3"
    },
    "3296": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3297": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3298": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3299": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3300": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 29
    },
    "3301": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3302": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3303": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3304": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3305": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3306": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3307": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF5"
    },
    "3310": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3311": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3313": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1101"
    },
    "3316": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3317": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3318": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3320": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3321": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3322": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3323": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3325": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3326": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3327": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3328": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3330": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3331": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3332": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3333": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3334": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3335": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3336": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3337": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3338": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 30
    },
    "3339": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3340": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3341": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3342": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "3"
    },
    "3343": {
      "op": "DUP8"
    },
    "3344": {
      "op": "SWAP1"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "DUP1"
    },
    "3347": {
      "op": "DUP3"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "op": "DUP5"
    },
    "3350": {
      "op": "SWAP1"
    },
    "3351": {
      "op": "MSTORE"
    },
    "3352": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3353": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3354": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3355": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3356": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "3"
    },
    "3357": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3358": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "3"
    },
    "3359": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3360": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3363": {
      "op": "SWAP1"
    },
    "3364": {
      "op": "SWAP2"
    },
    "3365": {
      "op": "ADD"
    },
    "3366": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3367": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3368": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3369": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3370": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3371": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3372": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "3"
    },
    "3373": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3374": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8763,
        8802
      ],
      "op": "SWAP5",
      "path": "2",
      "statement": 31
    },
    "3375": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3381": {
      "fn": "Lottery.payUser",
      "offset": [
        3394,
        3619
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3382": {
      "fn": "Lottery.payUser",
      "offset": [
        3460,
        3467
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3383": {
      "offset": [
        2031,
        2043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3384": {
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD53"
    },
    "3387": {
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3388": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3390": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3397": {
      "op": "SHL"
    },
    "3398": {
      "offset": [
        2023,
        2077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3399": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3400": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3402": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "ADD",
      "path": "6"
    },
    "3403": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "3406": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3407": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "3410": {
      "fn": "Lottery.payUser",
      "jump": "i",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3411": {
      "fn": "Lottery.payUser",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3418": {
      "op": "SHL"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "fn": "Lottery.payUser",
      "offset": [
        3487,
        3506
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 32
    },
    "3421": {
      "branch": 51,
      "fn": "Lottery.payUser",
      "offset": [
        3487,
        3506
      ],
      "op": "AND",
      "path": "6"
    },
    "3422": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDA0"
    },
    "3425": {
      "branch": 51,
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3426": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3428": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3437": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3440": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3442": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3443": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "ADD",
      "path": "6"
    },
    "3444": {
      "op": "MSTORE"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3449": {
      "op": "DUP3"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "PUSH20",
      "value": "0x696E76616C696420757365722061646472657373"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3478": {
      "op": "DUP3"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "3487": {
      "op": "JUMP"
    },
    "3488": {
      "fn": "Lottery.payUser",
      "offset": [
        3479,
        3531
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3489": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 33,
      "value": "0x40"
    },
    "3491": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3498": {
      "op": "SHL"
    },
    "3499": {
      "op": "SUB"
    },
    "3500": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3564
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3501": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3564
      ],
      "op": "AND",
      "path": "6"
    },
    "3502": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3503": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3504": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3505": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FC"
    },
    "3508": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "MUL",
      "path": "6"
    },
    "3509": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3510": {
      "fn": "Lottery.payUser",
      "offset": [
        3565,
        3572
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3511": {
      "fn": "Lottery.payUser",
      "offset": [
        3565,
        3572
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3512": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3514": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3515": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3516": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3517": {
      "fn": "Lottery.payUser",
      "offset": [
        3565,
        3572
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3518": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3564
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3519": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "DUP9",
      "path": "6"
    },
    "3520": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "CALL",
      "path": "6"
    },
    "3521": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3522": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "POP",
      "path": "6"
    },
    "3523": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "POP",
      "path": "6"
    },
    "3524": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "POP",
      "path": "6"
    },
    "3525": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "POP",
      "path": "6"
    },
    "3526": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3527": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3528": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3529": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDD6"
    },
    "3532": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3533": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3534": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3536": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3537": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3538": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3539": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3541": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3542": {
      "fn": "Lottery.payUser",
      "offset": [
        3541,
        3573
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 34,
      "value": "0x40"
    },
    "3546": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3547": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3554": {
      "op": "SHL"
    },
    "3555": {
      "op": "SUB"
    },
    "3556": {
      "op": "DUP6"
    },
    "3557": {
      "op": "AND"
    },
    "3558": {
      "op": "DUP2"
    },
    "3559": {
      "op": "MSTORE"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3562": {
      "op": "DUP2"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "op": "DUP5"
    },
    "3565": {
      "op": "SWAP1"
    },
    "3566": {
      "op": "MSTORE"
    },
    "3567": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x188C4D19B4FADD1889D9BD9BF0AB7C97E0719434751E6C05FEAC6339C1C001EC"
    },
    "3600": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3601": {
      "op": "ADD"
    },
    "3602": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3604": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3605": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3606": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3607": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "SUB",
      "path": "6"
    },
    "3608": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3609": {
      "fn": "Lottery.payUser",
      "offset": [
        3588,
        3612
      ],
      "op": "LOG1",
      "path": "6"
    },
    "3610": {
      "fn": "Lottery.payUser",
      "offset": [
        3394,
        3619
      ],
      "op": "POP",
      "path": "6"
    },
    "3611": {
      "fn": "Lottery.payUser",
      "offset": [
        3394,
        3619
      ],
      "op": "POP",
      "path": "6"
    },
    "3612": {
      "fn": "Lottery.payUser",
      "offset": [
        3394,
        3619
      ],
      "op": "POP",
      "path": "6"
    },
    "3613": {
      "fn": "Lottery.payUser",
      "jump": "o",
      "offset": [
        3394,
        3619
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3614": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4180,
        5293
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3615": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4298,
        4309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3616": {
      "offset": [
        2031,
        2043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3617": {
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE3C"
    },
    "3620": {
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3621": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3623": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "offset": [
        2023,
        2077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3632": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3633": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3635": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "ADD",
      "path": "6"
    },
    "3636": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "3639": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3640": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1119"
    },
    "3643": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3644": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2023,
        2077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3645": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4362,
        4386
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x2"
    },
    "3647": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3649": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4358
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3654": {
      "op": "SHL"
    },
    "3655": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4358
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3656": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4358
      ],
      "op": "DIV",
      "path": "6"
    },
    "3657": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3659": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4358
      ],
      "op": "AND",
      "path": "6"
    },
    "3660": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3662": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3663": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "GT",
      "path": "6"
    },
    "3664": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3665": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE5C"
    },
    "3668": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3669": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE5C"
    },
    "3672": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102B"
    },
    "3675": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4346,
        4386
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3676": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3677": {
      "branch": 52,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4346,
        4386
      ],
      "op": "EQ",
      "path": "6"
    },
    "3678": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEBF"
    },
    "3681": {
      "branch": 52,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3682": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3684": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3691": {
      "op": "SHL"
    },
    "3692": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3693": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3696": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3698": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3699": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "ADD",
      "path": "6"
    },
    "3700": {
      "op": "MSTORE"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3705": {
      "op": "DUP3"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "op": "MSTORE"
    },
    "3708": {
      "op": "PUSH32",
      "value": "0x54686520636F6E7472616374206973206E6F742070726F63657373696E672074"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3743": {
      "op": "DUP3"
    },
    "3744": {
      "op": "ADD"
    },
    "3745": {
      "op": "MSTORE"
    },
    "3746": {
      "op": "PUSH13",
      "value": "0x1A19481DDA5B9B995C881E595D"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3765": {
      "op": "DUP3"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "MSTORE"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3770": {
      "op": "ADD"
    },
    "3771": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x438"
    },
    "3774": {
      "op": "JUMP"
    },
    "3775": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4325,
        4457
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3776": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4467,
        4490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3778": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4507,
        4519
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3780": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4507,
        4519
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3781": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4493,
        4504
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3782": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4493,
        4519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xECF"
    },
    "3785": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4493,
        4519
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3786": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4493,
        4519
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3787": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4493,
        4519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12FD"
    },
    "3790": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4493,
        4519
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3791": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4493,
        4519
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3792": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 36,
      "value": "0x0"
    },
    "3794": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3795": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3796": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3797": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "3799": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3801": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3802": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3804": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3805": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3806": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3807": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "3809": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3810": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3817": {
      "op": "SHL"
    },
    "3818": {
      "op": "SUB"
    },
    "3819": {
      "op": "NOT"
    },
    "3820": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "AND",
      "path": "6"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3827": {
      "op": "SHL"
    },
    "3828": {
      "op": "SUB"
    },
    "3829": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3830": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3831": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4544,
        4581
      ],
      "op": "AND",
      "path": "6"
    },
    "3832": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3833": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3834": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3835": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "OR",
      "path": "6"
    },
    "3836": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3837": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4529,
        4581
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3838": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4467,
        4519
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3839": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4467,
        4519
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3840": {
      "op": "POP"
    },
    "3841": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4719,
        4740
      ],
      "op": "SELFBALANCE",
      "path": "6"
    },
    "3842": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4719,
        4740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3843": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4803,
        4806
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "3845": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4779,
        4799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0F"
    },
    "3848": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4719,
        4740
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3849": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4797,
        4799
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5A"
    },
    "3851": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4779,
        4799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1150"
    },
    "3854": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4779,
        4799
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3855": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4779,
        4799
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3856": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4778,
        4806
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF19"
    },
    "3859": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4778,
        4806
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3860": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4778,
        4806
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3861": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4778,
        4806
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125B"
    },
    "3864": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4778,
        4806
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3865": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4778,
        4806
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3866": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4750,
        4806
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3867": {
      "op": "POP"
    },
    "3868": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4816,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3870": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4868,
        4871
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "3872": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4844,
        4864
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF2A"
    },
    "3875": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4844,
        4859
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3876": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4862,
        4864
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3878": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4844,
        4864
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1150"
    },
    "3881": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4844,
        4864
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3882": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4844,
        4864
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3883": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4843,
        4871
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF34"
    },
    "3886": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4843,
        4871
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3887": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4843,
        4871
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3888": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4843,
        4871
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125B"
    },
    "3891": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4843,
        4871
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3892": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4843,
        4871
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3893": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4889,
        4901
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 37,
      "value": "0x9"
    },
    "3895": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4889,
        4901
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3896": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4816,
        4871
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3897": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4816,
        4871
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3898": {
      "op": "POP"
    },
    "3899": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4881,
        4921
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4D"
    },
    "3902": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4881,
        4921
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "op": "SUB"
    },
    "3911": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4889,
        4901
      ],
      "op": "AND",
      "path": "6"
    },
    "3912": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4903,
        4920
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3913": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4881,
        4888
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD35"
    },
    "3916": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4881,
        4921
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3917": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4881,
        4921
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3918": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4931,
        4965
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0xF68"
    },
    "3921": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4939,
        4946
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF62"
    },
    "3924": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3926": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3933": {
      "op": "SHL"
    },
    "3934": {
      "op": "SUB"
    },
    "3935": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "3936": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3937": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3938": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4939,
        4946
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3939": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4948,
        4964
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3940": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4931,
        4938
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD35"
    },
    "3943": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        4931,
        4965
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3944": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4931,
        4965
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3945": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4993,
        5005
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 39,
      "value": "0x1"
    },
    "3947": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4993,
        5028
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3948": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4993,
        5028
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3953": {
      "op": "SHL"
    },
    "3954": {
      "op": "NOT"
    },
    "3955": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4993,
        5028
      ],
      "op": "AND",
      "path": "6"
    },
    "3956": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4993,
        5028
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3957": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4993,
        5028
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3958": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5008,
        5028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3960": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5038,
        5166
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3961": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5067,
        5079
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3963": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5067,
        5079
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3964": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5059,
        5064
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3965": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5059,
        5079
      ],
      "op": "LT",
      "path": "6"
    },
    "3966": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5038,
        5166
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3967": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5038,
        5166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFB9"
    },
    "3970": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5038,
        5166
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3971": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5154,
        5155
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 40,
      "value": "0x0"
    },
    "3973": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3974": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3975": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3976": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5143
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "3978": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3980": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3981": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3982": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3983": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3985": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3986": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3987": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3988": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3995": {
      "op": "SHL"
    },
    "3996": {
      "op": "SUB"
    },
    "3997": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5123,
        5150
      ],
      "op": "AND",
      "path": "6"
    },
    "3998": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5151
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3999": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4000": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5122
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "4002": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5151
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4003": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5151
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4004": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5151
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4005": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5151
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4006": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5151
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4007": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5104,
        5155
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4008": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5144,
        5149
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4009": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5081,
        5088
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 41,
      "value": "0xFB1"
    },
    "4012": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5144,
        5149
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4013": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5081,
        5088
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1186"
    },
    "4016": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        5081,
        5088
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4017": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5081,
        5088
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4018": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5081,
        5088
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4019": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5081,
        5088
      ],
      "op": "POP",
      "path": "6"
    },
    "4020": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5081,
        5088
      ],
      "op": "POP",
      "path": "6"
    },
    "4021": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5038,
        5166
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF78"
    },
    "4024": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5038,
        5166
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4025": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5038,
        5166
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5190,
        5191
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 42,
      "value": "0x0"
    },
    "4029": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5175,
        5187
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4031": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5175,
        5191
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4032": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5201,
        5211
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x2"
    },
    "4034": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5201,
        5225
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4035": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5201,
        5225
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4036": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5201,
        5225
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4037": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5256,
        5268
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 44,
      "value": "0x9"
    },
    "4039": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5256,
        5268
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4040": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4042": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4043": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4050": {
      "op": "SHL"
    },
    "4051": {
      "op": "SUB"
    },
    "4052": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5256,
        5268
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4053": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5256,
        5268
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4054": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5256,
        5268
      ],
      "op": "AND",
      "path": "6"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "MSTORE"
    },
    "4057": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5270,
        5285
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4060": {
      "op": "DUP4"
    },
    "4061": {
      "op": "ADD"
    },
    "4062": {
      "op": "MSTORE"
    },
    "4063": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x64FFCA72C341AAB4874123AFB736AFBD6FAD01E6EAF584CFE0F320A144D3A576"
    },
    "4096": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4097": {
      "op": "ADD"
    },
    "4098": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4100": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4101": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4102": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4103": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "SUB",
      "path": "6"
    },
    "4104": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4105": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5240,
        5286
      ],
      "op": "LOG1",
      "path": "6"
    },
    "4106": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4315,
        5293
      ],
      "op": "POP",
      "path": "6"
    },
    "4107": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4315,
        5293
      ],
      "op": "POP",
      "path": "6"
    },
    "4108": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4315,
        5293
      ],
      "op": "POP",
      "path": "6"
    },
    "4109": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4315,
        5293
      ],
      "op": "POP",
      "path": "6"
    },
    "4110": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4180,
        5293
      ],
      "op": "POP",
      "path": "6"
    },
    "4111": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4180,
        5293
      ],
      "op": "POP",
      "path": "6"
    },
    "4112": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        4180,
        5293
      ],
      "op": "POP",
      "path": "6"
    },
    "4113": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "o",
      "offset": [
        4180,
        5293
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4114": {
      "op": "JUMPDEST"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4119": {
      "op": "DUP3"
    },
    "4120": {
      "op": "DUP5"
    },
    "4121": {
      "op": "SUB"
    },
    "4122": {
      "op": "SLT"
    },
    "4123": {
      "op": "ISZERO"
    },
    "4124": {
      "op": "PUSH2",
      "value": "0x1024"
    },
    "4127": {
      "op": "JUMPI"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4130": {
      "op": "DUP1"
    },
    "4131": {
      "op": "REVERT"
    },
    "4132": {
      "op": "JUMPDEST"
    },
    "4133": {
      "op": "POP"
    },
    "4134": {
      "op": "CALLDATALOAD"
    },
    "4135": {
      "op": "SWAP2"
    },
    "4136": {
      "op": "SWAP1"
    },
    "4137": {
      "op": "POP"
    },
    "4138": {
      "jump": "o",
      "op": "JUMP"
    },
    "4139": {
      "op": "JUMPDEST"
    },
    "4140": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4147": {
      "op": "SHL"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "MSTORE"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4155": {
      "op": "MSTORE"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4160": {
      "op": "REVERT"
    },
    "4161": {
      "op": "JUMPDEST"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4164": {
      "op": "DUP2"
    },
    "4165": {
      "op": "ADD"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4168": {
      "op": "DUP4"
    },
    "4169": {
      "op": "LT"
    },
    "4170": {
      "op": "PUSH2",
      "value": "0x1063"
    },
    "4173": {
      "op": "JUMPI"
    },
    "4174": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4181": {
      "op": "SHL"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4184": {
      "op": "MSTORE"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4189": {
      "op": "MSTORE"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4194": {
      "op": "REVERT"
    },
    "4195": {
      "op": "JUMPDEST"
    },
    "4196": {
      "op": "SWAP2"
    },
    "4197": {
      "op": "SWAP1"
    },
    "4198": {
      "op": "MSTORE"
    },
    "4199": {
      "op": "SWAP1"
    },
    "4200": {
      "jump": "o",
      "op": "JUMP"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4204": {
      "op": "DUP1"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4207": {
      "op": "DUP4"
    },
    "4208": {
      "op": "DUP6"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "op": "SLT"
    },
    "4211": {
      "op": "ISZERO"
    },
    "4212": {
      "op": "PUSH2",
      "value": "0x107C"
    },
    "4215": {
      "op": "JUMPI"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4218": {
      "op": "DUP1"
    },
    "4219": {
      "op": "REVERT"
    },
    "4220": {
      "op": "JUMPDEST"
    },
    "4221": {
      "op": "POP"
    },
    "4222": {
      "op": "POP"
    },
    "4223": {
      "op": "DUP1"
    },
    "4224": {
      "op": "CALLDATALOAD"
    },
    "4225": {
      "op": "SWAP3"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4228": {
      "op": "SWAP1"
    },
    "4229": {
      "op": "SWAP2"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "op": "CALLDATALOAD"
    },
    "4232": {
      "op": "SWAP2"
    },
    "4233": {
      "op": "POP"
    },
    "4234": {
      "jump": "o",
      "op": "JUMP"
    },
    "4235": {
      "op": "JUMPDEST"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4240": {
      "op": "DUP3"
    },
    "4241": {
      "op": "DUP5"
    },
    "4242": {
      "op": "SUB"
    },
    "4243": {
      "op": "SLT"
    },
    "4244": {
      "op": "ISZERO"
    },
    "4245": {
      "op": "PUSH2",
      "value": "0x109D"
    },
    "4248": {
      "op": "JUMPI"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4251": {
      "op": "DUP1"
    },
    "4252": {
      "op": "REVERT"
    },
    "4253": {
      "op": "JUMPDEST"
    },
    "4254": {
      "op": "DUP2"
    },
    "4255": {
      "op": "CALLDATALOAD"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4262": {
      "op": "SHL"
    },
    "4263": {
      "op": "SUB"
    },
    "4264": {
      "op": "DUP2"
    },
    "4265": {
      "op": "AND"
    },
    "4266": {
      "op": "DUP2"
    },
    "4267": {
      "op": "EQ"
    },
    "4268": {
      "op": "PUSH2",
      "value": "0x10B4"
    },
    "4271": {
      "op": "JUMPI"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4274": {
      "op": "DUP1"
    },
    "4275": {
      "op": "REVERT"
    },
    "4276": {
      "op": "JUMPDEST"
    },
    "4277": {
      "op": "SWAP4"
    },
    "4278": {
      "op": "SWAP3"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "op": "POP"
    },
    "4282": {
      "jump": "o",
      "op": "JUMP"
    },
    "4283": {
      "op": "JUMPDEST"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4286": {
      "op": "DUP1"
    },
    "4287": {
      "op": "DUP3"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4291": {
      "op": "SWAP1"
    },
    "4292": {
      "op": "DUP3"
    },
    "4293": {
      "op": "ADD"
    },
    "4294": {
      "op": "MSTORE"
    },
    "4295": {
      "op": "PUSH22",
      "value": "0x131BDD1D195C9E481B5D5CDD0818994818DB1BDCD959"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "4320": {
      "op": "SHL"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4323": {
      "op": "DUP3"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "MSTORE"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4328": {
      "op": "ADD"
    },
    "4329": {
      "op": "SWAP1"
    },
    "4330": {
      "jump": "o",
      "op": "JUMP"
    },
    "4331": {
      "op": "JUMPDEST"
    },
    "4332": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4347": {
      "op": "MSTORE"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4352": {
      "op": "REVERT"
    },
    "4353": {
      "op": "JUMPDEST"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4356": {
      "op": "DUP3"
    },
    "4357": {
      "op": "NOT"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "GT"
    },
    "4360": {
      "op": "ISZERO"
    },
    "4361": {
      "op": "PUSH2",
      "value": "0x1114"
    },
    "4364": {
      "op": "JUMPI"
    },
    "4365": {
      "op": "PUSH2",
      "value": "0x1114"
    },
    "4368": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4371": {
      "jump": "i",
      "op": "JUMP"
    },
    "4372": {
      "op": "JUMPDEST"
    },
    "4373": {
      "op": "POP"
    },
    "4374": {
      "op": "ADD"
    },
    "4375": {
      "op": "SWAP1"
    },
    "4376": {
      "jump": "o",
      "op": "JUMP"
    },
    "4377": {
      "op": "JUMPDEST"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4380": {
      "op": "DUP1"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "MSTORE"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4385": {
      "op": "SWAP1"
    },
    "4386": {
      "op": "DUP3"
    },
    "4387": {
      "op": "ADD"
    },
    "4388": {
      "op": "MSTORE"
    },
    "4389": {
      "op": "PUSH32",
      "value": "0x5468697320706172616D657465722063616E6E6F74206265207A65726F000000"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4424": {
      "op": "DUP3"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "MSTORE"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4429": {
      "op": "ADD"
    },
    "4430": {
      "op": "SWAP1"
    },
    "4431": {
      "jump": "o",
      "op": "JUMP"
    },
    "4432": {
      "op": "JUMPDEST"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4435": {
      "op": "DUP2"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4438": {
      "op": "NOT"
    },
    "4439": {
      "op": "DIV"
    },
    "4440": {
      "op": "DUP4"
    },
    "4441": {
      "op": "GT"
    },
    "4442": {
      "op": "DUP3"
    },
    "4443": {
      "op": "ISZERO"
    },
    "4444": {
      "op": "ISZERO"
    },
    "4445": {
      "op": "AND"
    },
    "4446": {
      "op": "ISZERO"
    },
    "4447": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4450": {
      "op": "JUMPI"
    },
    "4451": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4454": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4457": {
      "jump": "i",
      "op": "JUMP"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "POP"
    },
    "4460": {
      "op": "MUL"
    },
    "4461": {
      "op": "SWAP1"
    },
    "4462": {
      "jump": "o",
      "op": "JUMP"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4466": {
      "op": "DUP3"
    },
    "4467": {
      "op": "DUP3"
    },
    "4468": {
      "op": "LT"
    },
    "4469": {
      "op": "ISZERO"
    },
    "4470": {
      "op": "PUSH2",
      "value": "0x1181"
    },
    "4473": {
      "op": "JUMPI"
    },
    "4474": {
      "op": "PUSH2",
      "value": "0x1181"
    },
    "4477": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4480": {
      "jump": "i",
      "op": "JUMP"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "POP"
    },
    "4483": {
      "op": "SUB"
    },
    "4484": {
      "op": "SWAP1"
    },
    "4485": {
      "jump": "o",
      "op": "JUMP"
    },
    "4486": {
      "op": "JUMPDEST"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4491": {
      "op": "NOT"
    },
    "4492": {
      "op": "DUP3"
    },
    "4493": {
      "op": "EQ"
    },
    "4494": {
      "op": "ISZERO"
    },
    "4495": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4498": {
      "op": "JUMPI"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x119A"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4505": {
      "jump": "i",
      "op": "JUMP"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4510": {
      "op": "ADD"
    },
    "4511": {
      "op": "SWAP1"
    },
    "4512": {
      "jump": "o",
      "op": "JUMP"
    },
    "4513": {
      "op": "JUMPDEST"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4516": {
      "op": "DUP1"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "op": "DUP2"
    },
    "4520": {
      "op": "DUP2"
    },
    "4521": {
      "op": "ADD"
    },
    "4522": {
      "op": "MSTORE"
    },
    "4523": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4558": {
      "op": "DUP3"
    },
    "4559": {
      "op": "ADD"
    },
    "4560": {
      "op": "MSTORE"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "SWAP1"
    },
    "4565": {
      "jump": "o",
      "op": "JUMP"
    },
    "4566": {
      "op": "JUMPDEST"
    },
    "4567": {
      "op": "DUP1"
    },
    "4568": {
      "op": "MLOAD"
    },
    "4569": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "4580": {
      "op": "DUP2"
    },
    "4581": {
      "op": "AND"
    },
    "4582": {
      "op": "DUP2"
    },
    "4583": {
      "op": "EQ"
    },
    "4584": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4587": {
      "op": "JUMPI"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4590": {
      "op": "DUP1"
    },
    "4591": {
      "op": "REVERT"
    },
    "4592": {
      "op": "JUMPDEST"
    },
    "4593": {
      "op": "SWAP2"
    },
    "4594": {
      "op": "SWAP1"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "jump": "o",
      "op": "JUMP"
    },
    "4597": {
      "op": "JUMPDEST"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4600": {
      "op": "DUP1"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4603": {
      "op": "DUP1"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4608": {
      "op": "DUP7"
    },
    "4609": {
      "op": "DUP9"
    },
    "4610": {
      "op": "SUB"
    },
    "4611": {
      "op": "SLT"
    },
    "4612": {
      "op": "ISZERO"
    },
    "4613": {
      "op": "PUSH2",
      "value": "0x120D"
    },
    "4616": {
      "op": "JUMPI"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4619": {
      "op": "DUP1"
    },
    "4620": {
      "op": "REVERT"
    },
    "4621": {
      "op": "JUMPDEST"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0x1216"
    },
    "4625": {
      "op": "DUP7"
    },
    "4626": {
      "op": "PUSH2",
      "value": "0x11D6"
    },
    "4629": {
      "jump": "i",
      "op": "JUMP"
    },
    "4630": {
      "op": "JUMPDEST"
    },
    "4631": {
      "op": "SWAP5"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4635": {
      "op": "DUP7"
    },
    "4636": {
      "op": "ADD"
    },
    "4637": {
      "op": "MLOAD"
    },
    "4638": {
      "op": "SWAP4"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4642": {
      "op": "DUP7"
    },
    "4643": {
      "op": "ADD"
    },
    "4644": {
      "op": "MLOAD"
    },
    "4645": {
      "op": "SWAP3"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4649": {
      "op": "DUP7"
    },
    "4650": {
      "op": "ADD"
    },
    "4651": {
      "op": "MLOAD"
    },
    "4652": {
      "op": "SWAP2"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "op": "PUSH2",
      "value": "0x1239"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4659": {
      "op": "DUP8"
    },
    "4660": {
      "op": "ADD"
    },
    "4661": {
      "op": "PUSH2",
      "value": "0x11D6"
    },
    "4664": {
      "jump": "i",
      "op": "JUMP"
    },
    "4665": {
      "op": "JUMPDEST"
    },
    "4666": {
      "op": "SWAP1"
    },
    "4667": {
      "op": "POP"
    },
    "4668": {
      "op": "SWAP3"
    },
    "4669": {
      "op": "SWAP6"
    },
    "4670": {
      "op": "POP"
    },
    "4671": {
      "op": "SWAP3"
    },
    "4672": {
      "op": "SWAP6"
    },
    "4673": {
      "op": "SWAP1"
    },
    "4674": {
      "op": "SWAP4"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "jump": "o",
      "op": "JUMP"
    },
    "4677": {
      "op": "JUMPDEST"
    },
    "4678": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4685": {
      "op": "SHL"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4688": {
      "op": "MSTORE"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4693": {
      "op": "MSTORE"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4698": {
      "op": "REVERT"
    },
    "4699": {
      "op": "JUMPDEST"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4702": {
      "op": "DUP3"
    },
    "4703": {
      "op": "PUSH2",
      "value": "0x126A"
    },
    "4706": {
      "op": "JUMPI"
    },
    "4707": {
      "op": "PUSH2",
      "value": "0x126A"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x1245"
    },
    "4713": {
      "jump": "i",
      "op": "JUMP"
    },
    "4714": {
      "op": "JUMPDEST"
    },
    "4715": {
      "op": "POP"
    },
    "4716": {
      "op": "DIV"
    },
    "4717": {
      "op": "SWAP1"
    },
    "4718": {
      "jump": "o",
      "op": "JUMP"
    },
    "4719": {
      "op": "JUMPDEST"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4722": {
      "op": "DUP1"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4725": {
      "op": "SHL"
    },
    "4726": {
      "op": "SUB"
    },
    "4727": {
      "op": "DUP5"
    },
    "4728": {
      "op": "AND"
    },
    "4729": {
      "op": "DUP2"
    },
    "4730": {
      "op": "MSTORE"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4735": {
      "op": "DUP5"
    },
    "4736": {
      "op": "DUP2"
    },
    "4737": {
      "op": "DUP5"
    },
    "4738": {
      "op": "ADD"
    },
    "4739": {
      "op": "MSTORE"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4744": {
      "op": "DUP5"
    },
    "4745": {
      "op": "ADD"
    },
    "4746": {
      "op": "MSTORE"
    },
    "4747": {
      "op": "DUP4"
    },
    "4748": {
      "op": "MLOAD"
    },
    "4749": {
      "op": "DUP1"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4752": {
      "op": "DUP6"
    },
    "4753": {
      "op": "ADD"
    },
    "4754": {
      "op": "MSTORE"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4757": {
      "op": "JUMPDEST"
    },
    "4758": {
      "op": "DUP2"
    },
    "4759": {
      "op": "DUP2"
    },
    "4760": {
      "op": "LT"
    },
    "4761": {
      "op": "ISZERO"
    },
    "4762": {
      "op": "PUSH2",
      "value": "0x12B1"
    },
    "4765": {
      "op": "JUMPI"
    },
    "4766": {
      "op": "DUP6"
    },
    "4767": {
      "op": "DUP2"
    },
    "4768": {
      "op": "ADD"
    },
    "4769": {
      "op": "DUP4"
    },
    "4770": {
      "op": "ADD"
    },
    "4771": {
      "op": "MLOAD"
    },
    "4772": {
      "op": "DUP6"
    },
    "4773": {
      "op": "DUP3"
    },
    "4774": {
      "op": "ADD"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4777": {
      "op": "ADD"
    },
    "4778": {
      "op": "MSTORE"
    },
    "4779": {
      "op": "DUP3"
    },
    "4780": {
      "op": "ADD"
    },
    "4781": {
      "op": "PUSH2",
      "value": "0x1295"
    },
    "4784": {
      "op": "JUMP"
    },
    "4785": {
      "op": "JUMPDEST"
    },
    "4786": {
      "op": "DUP2"
    },
    "4787": {
      "op": "DUP2"
    },
    "4788": {
      "op": "GT"
    },
    "4789": {
      "op": "ISZERO"
    },
    "4790": {
      "op": "PUSH2",
      "value": "0x12C3"
    },
    "4793": {
      "op": "JUMPI"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4798": {
      "op": "DUP4"
    },
    "4799": {
      "op": "DUP8"
    },
    "4800": {
      "op": "ADD"
    },
    "4801": {
      "op": "ADD"
    },
    "4802": {
      "op": "MSTORE"
    },
    "4803": {
      "op": "JUMPDEST"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4807": {
      "op": "ADD"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4810": {
      "op": "NOT"
    },
    "4811": {
      "op": "AND"
    },
    "4812": {
      "op": "SWAP3"
    },
    "4813": {
      "op": "SWAP1"
    },
    "4814": {
      "op": "SWAP3"
    },
    "4815": {
      "op": "ADD"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4818": {
      "op": "ADD"
    },
    "4819": {
      "op": "SWAP6"
    },
    "4820": {
      "op": "SWAP5"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "op": "POP"
    },
    "4823": {
      "op": "POP"
    },
    "4824": {
      "op": "POP"
    },
    "4825": {
      "op": "POP"
    },
    "4826": {
      "jump": "o",
      "op": "JUMP"
    },
    "4827": {
      "op": "JUMPDEST"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4832": {
      "op": "DUP3"
    },
    "4833": {
      "op": "DUP5"
    },
    "4834": {
      "op": "SUB"
    },
    "4835": {
      "op": "SLT"
    },
    "4836": {
      "op": "ISZERO"
    },
    "4837": {
      "op": "PUSH2",
      "value": "0x12ED"
    },
    "4840": {
      "op": "JUMPI"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4843": {
      "op": "DUP1"
    },
    "4844": {
      "op": "REVERT"
    },
    "4845": {
      "op": "JUMPDEST"
    },
    "4846": {
      "op": "DUP2"
    },
    "4847": {
      "op": "MLOAD"
    },
    "4848": {
      "op": "DUP1"
    },
    "4849": {
      "op": "ISZERO"
    },
    "4850": {
      "op": "ISZERO"
    },
    "4851": {
      "op": "DUP2"
    },
    "4852": {
      "op": "EQ"
    },
    "4853": {
      "op": "PUSH2",
      "value": "0x10B4"
    },
    "4856": {
      "op": "JUMPI"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4859": {
      "op": "DUP1"
    },
    "4860": {
      "op": "REVERT"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4864": {
      "op": "DUP3"
    },
    "4865": {
      "op": "PUSH2",
      "value": "0x130C"
    },
    "4868": {
      "op": "JUMPI"
    },
    "4869": {
      "op": "PUSH2",
      "value": "0x130C"
    },
    "4872": {
      "op": "PUSH2",
      "value": "0x1245"
    },
    "4875": {
      "jump": "i",
      "op": "JUMP"
    },
    "4876": {
      "op": "JUMPDEST"
    },
    "4877": {
      "op": "POP"
    },
    "4878": {
      "op": "MOD"
    },
    "4879": {
      "op": "SWAP1"
    },
    "4880": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "33620e2e9d6f229c8aa6131bcd8bf894e4ab940e",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Lottery is VRFConsumerBase, Ownable {\n    // Lottery states\n    enum LOTTERY_STATE {\n        CLOSED,\n        OPENED,\n        PROCESSING\n    }\n    LOTTERY_STATE public lotteryState;\n    uint256 public randomness;\n    uint256 public entryCounter;\n    uint256 public entryFee;\n    uint256 public fee; \n    uint256 public lotteryDuration;\n    uint256 public lotteryDeadlineTimestamp;    \n    bytes32 public keyhash;\n    address public latestWinner;\n    mapping(address => uint256) public participantEntries;\n    mapping(uint256=>address) public entryIdToParticipant;\n    AggregatorV3Interface public priceFeed;\n\n    // events\n    event LotteryStarted(uint256 timeStamp);\n    event LotteryFinished(address winner, uint256 timeStamp);\n    event NewEntry(address participant, uint256 entryId);\n    event UserPaid(address user, uint256 amount);\n    event RequestedRandomness(bytes32 requestId);\n\n    constructor(\n        address _priceFeedAddress,\n        address _vrfCoordinator,\n        address _linkTokenAddress,\n        uint256 _entryFee,\n        uint256 _fee,\n        bytes32 _keyhash\n    ) VRFConsumerBase(_vrfCoordinator, _linkTokenAddress) {\n        priceFeed = AggregatorV3Interface(_priceFeedAddress);\n        // amount players must pay in order to enter the lottery\n        entryFee = _entryFee;\n        fee = _fee;\n        keyhash = _keyhash;\n        lotteryState = LOTTERY_STATE.CLOSED;\n        // 24 hours\n        lotteryDuration = 86400;\n    }\n    // modifiers\n    modifier onlyOpened {\n        require(lotteryState == LOTTERY_STATE.OPENED, \"Lottery must be opened\");\n        _;\n    }\n\n    modifier onlyClosed {\n        require(lotteryState == LOTTERY_STATE.CLOSED, \"Lottery must be closed\");\n        _;\n    }\n\n    modifier notZero(uint256 _number) {\n        require(_number != 0, \"This parameter cannot be zero\");\n        _;\n    }\n\n    function getEntryFee() public view returns (uint256) {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 ethPrice = uint256(price) * 10**10;\n        uint256 precision = 10**18;\n        return (entryFee * precision) / ethPrice;\n    }\n\n    function enterLottery(uint256 _numberOfEntries) \n        public \n        payable \n        onlyOpened \n        notZero(_numberOfEntries)\n    {\n        uint256 _fee = getEntryFee();\n        require(msg.sender != address(0), \"invalid user address\");\n        require(msg.value >= _fee * _numberOfEntries, \"You need to spend more ETH!\");\n        require(\n            block.timestamp < lotteryDeadlineTimestamp, \n            \"The lottery deadline is finished\"\n        );\n        // In case of the user send an amount greater than the necessary, refund the user\n        uint256 amountToBeRefund = msg.value - (_fee * _numberOfEntries);\n        if (amountToBeRefund > 0) {\n            payUser(msg.sender, amountToBeRefund);\n        }\n        \n        for (uint256 counter = 0; counter < _numberOfEntries; counter++) {\n            entryIdToParticipant[entryCounter] = msg.sender;\n            participantEntries[msg.sender]++;\n            entryCounter++;\n            emit NewEntry(msg.sender, entryCounter - 1);    \n        }\n    }\n\n    function payUser(address _user, uint256 _amount) internal notZero(_amount) {\n        require(_user != address(0), \"invalid user address\");\n        payable(_user).transfer(_amount);\n        emit UserPaid(_user, _amount);\n    }\n\n    function startLottery() public onlyClosed {\n        lotteryState = LOTTERY_STATE.OPENED;\n        lotteryDeadlineTimestamp = block.timestamp + lotteryDuration;\n        emit LotteryStarted(block.timestamp);\n    }\n\n    function endLottery() public onlyOpened {\n        require(\n            block.timestamp >= lotteryDeadlineTimestamp,\n            \"The lottery is not finished yet\"\n        );\n        lotteryState = LOTTERY_STATE.PROCESSING;\n        bytes32 requestId = requestRandomness(keyhash, fee);\n        emit RequestedRandomness(requestId);\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n        notZero(_randomness)\n    {\n        require(\n            lotteryState == LOTTERY_STATE.PROCESSING,\n            \"The contract is not processing the winner yet\"\n        );\n        uint256 entryIdOfWinner = _randomness % entryCounter;\n        latestWinner = entryIdToParticipant[entryIdOfWinner];\n        // The winner recieves 90% of the contract balance\n        // The other 10% goes to the owner\n        uint256 contractBalance = address(this).balance;\n        uint256 amountToPayWinner = (contractBalance * 90) / 100;\n        uint256 amountToPayOwner = (contractBalance * 10) / 100;\n        payUser(latestWinner, amountToPayWinner);\n        payUser(owner(), amountToPayOwner);\n        // Reset \n        lotteryState = LOTTERY_STATE.CLOSED;\n        for (uint index = 0; index < entryCounter; index++) {\n            participantEntries[entryIdToParticipant[index]] = 0;\n        }\n        entryCounter = 0;\n        randomness = _randomness;\n        emit LotteryFinished(latestWinner, block.timestamp);\n    }\n\n    function changeEntryFee(uint256 _newEntryFee)\n        public\n        onlyOwner\n        onlyClosed\n        notZero(_newEntryFee)\n    {\n        entryFee = _newEntryFee;\n    }\n\n    function changeDuration(uint256 _newDuration) \n        public\n        onlyOwner \n        onlyClosed\n        notZero(_newDuration)\n    {\n        lotteryDuration = _newDuration;\n    }\n}\n",
  "sourceMap": "248:5412:6:-:0;;;1149:558;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9369:32:2;;;;;9407;;;;909:6:0;:18;;-1:-1:-1;;;;;;909:18:0;665:10:1;909:18:0;;;;;;942:43;;665:10:1;;867:17:0;;942:43;;867:17;;942:43;-1:-1:-1;1407:9:6::1;:52:::0;;-1:-1:-1;;;;;;1407:52:6::1;-1:-1:-1::0;;;;;1407:52:6;;;::::1;::::0;;;::::1;::::0;;;1534:8:::1;:20:::0;;;;1564:3:::1;:10:::0;-1:-1:-1;;;1584:18:6;-1:-1:-1;1612:35:6;;-1:-1:-1;;;;1612:35:6::1;::::0;;1695:5:::1;1677:15;:23:::0;248:5412;;14:177:8;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:564::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;660:2;649:9;645:18;639:25;629:35;;704:3;693:9;689:19;683:26;673:36;;749:3;738:9;734:19;728:26;718:36;;196:564;;;;;;;;:::o;765:127::-;248:5412:6;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}